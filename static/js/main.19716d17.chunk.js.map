{"version":3,"sources":["redux/menu/selectors.js","redux/menu/actionTypes.js","redux/menu/actions.js","ui/common/hocs/withChangeIconOnInit.jsx","ui/common/constants.js","ui/layout/content/single-page-template/SinglePageTemplate.jsx","ui/common/components/quote/Quote.jsx","ui/routes/home/quote-section/QuoteSection.jsx","ui/routes/home/Home.jsx","redux/loader/loaderKeys.js","redux/loader/actionTypes.js","redux/loader/actions.js","redux/feedback-manager/actionTypes.js","redux/common/constants.js","redux/feedback-manager/actions.js","redux/settings/selectors.js","redux/api/utils.js","redux/home/actionTypes.js","redux/home/actions.js","redux/home/selectors.js","ui/routes/home/HomeContainer.js","ui/common/components/form/button/Button.jsx","ui/common/components/form/generic-form/GenericForm.jsx","ui/common/components/form/input-row/InputRow.jsx","ui/common/components/form/custom-checkbox/CustomCheckbox.jsx","ui/common/components/form/custom-select/CustomSelect.jsx","ui/common/components/form/multiple-select/MultipleSelect.jsx","ui/common/components/form/date-picker/DatePicker.jsx","ui/common/components/form/input/Input.jsx","ui/routes/users/add-user/AddUserPage.jsx","redux/users/actionTypes.js","redux/users/actions.js","redux/users/selectors.js","ui/routes/users/add-user/AddUserPageContainer.js","ui/routes/users/create-group/CreateGroupPage.jsx","ui/routes/users/create-group/CreateGroupPageContainer.js","ui/common/components/icon-with-tooltip/IconWithTooltip.jsx","ui/common/hocs/withHover.jsx","ui/routes/users/manage-users/associations-table/AssociationsTable.jsx","ui/routes/users/manage-users/ManageUsersPage.jsx","ui/routes/users/manage-users/ManageUsersPageContainer.js","ui/common/components/generic-modal/GenericModal.jsx","ui/routes/payments/add-payment/associations-modal/AssociationsModal.jsx","ui/routes/payments/add-payment/group-list-select/GroupListSelect.jsx","redux/common/utils.js","ui/routes/payments/payments-table/PaymentsTable.jsx","ui/routes/payments/add-payment/AddPaymentPage.jsx","redux/payments/actionTypes.js","redux/spending-categories/actionTypes.js","redux/spending-categories/actions.js","redux/payments/actions.js","redux/spending-categories/selectors.js","redux/payments/selectors.js","ui/routes/payments/commons.js","ui/routes/payments/add-payment/AddPaymentPageContainer.js","ui/common/components/accordion/Accordion.jsx","ui/routes/payments/reports/search-payments-accordion/search-payments-form/SearchPaymentsForm.jsx","ui/routes/payments/reports/search-payments-accordion/search-payments-result/SearchPaymentsResult.jsx","ui/routes/payments/reports/search-payments-accordion/SearchPaymentsAccordion.jsx","ui/routes/payments/reports/common-report-accordion/CommonReportAccordion.jsx","ui/routes/payments/reports/diff-report-accordion/DiffReportAccordion.jsx","ui/routes/payments/reports/aggregate-report-accordion/AggregateReportAccordion.jsx","ui/routes/payments/reports/minnicu-modal/MinnicuModal.jsx","ui/routes/payments/reports/ReportsPage.jsx","ui/routes/payments/reports/ReportsPageContainer.js","ui/routes/settings/SettingsPage.jsx","redux/settings/actionTypes.js","ui/routes/settings/SettingsPageContainer.js","redux/settings/actions.js","ui/routes/spending-categories/SpendingCategories.jsx","ui/routes/spending-categories/SpendingCategoriesContainer.js","redux/menu/reducer.js","redux/settings/reducer.js","redux/feedback-manager/reducer.js","redux/loader/selectors.js","redux/loader/reducer.js","redux/users/reducer.js","redux/spending-categories/reducer.js","redux/home/reducer.js","redux/payments/reducer.js","redux/logger.js","redux/store.js","redux/rootReducer.js","ui/app-router/AppRouter.jsx","ui/common/components/SidebarIcon.jsx","ui/layout/sidebar/Sidebar.jsx","ui/layout/sidebar/SidebarContainer.js","ui/layout/second-level-sidebar/second-level-sidebar-content/SecondLevelSidebarContent.jsx","ui/layout/second-level-sidebar/SecondLevelSidebarContainer.js","ui/layout/second-level-sidebar/SecondLevelSidebar.jsx","ui/layout/content/Content.jsx","ui/common/components/alert/Alert.jsx","ui/common/components/feedback-modal/FeedbackModal.jsx","ui/layout/feedback-manager/FeedbackManager.jsx","redux/feedback-manager/selectors.js","ui/layout/feedback-manager/FeedbackManagerContainer.js","ui/layout/global-loader/GlobalLoader.jsx","ui/layout/LayoutContainer.js","ui/layout/Layout.jsx","App.js","reportWebVitals.js","ui/i18n/i18n.js","index.js"],"names":["getMenuSlice","state","menuReducer","getMenuItems","createSelector","menuItems","getClickedIcon","clickedIcon","getActiveIcon","activeIcon","getSecondLevelSidebarOpen","secondLevelSidebarOpen","MENU_INIT","MENU_ICON_CLICKED","MENU_ACTIVE_ICON_CHANGED","MENU_SECOND_LEVEL_SIDEBAR_OPENED","MENU_SECOND_LEVEL_SIDEBAR_CLOSED","MENU_SECOND_LEVEL_SIDEBAR_TOGGLED","clickMenuIcon","type","payload","openSecondLevelSidebar","closeSecondLevelSidebar","closeSidebarAndResetIconClicked","dispatch","getState","navigateAndCloseSidebar","route","milliseconds","push","setTimeout","mapStateToProps","getIconObjByKey","key","items","find","el","getIconObjectByKey","mapDispatchToProps","changeActiveIcon","withChangeIconOnInit","iconKey","WrappedComponent","connect","props","useEffect","iconObj","disconnectedWithChangeIconOnInit","BASE_HREF","ADD_USER_ROUTE","CREATE_GROUP_ROUTE","MANAGE_USER_ROUTE","ADD_PAYMENT_ROUTE","REPORTS_ROUTE","SETTINGS_ROUTE","SPENDING_CATEGORIES_ROUTE","HOME_ROUTE","HOME_KEY","PAYMENTS_KEY","USERS_KEY","SETTINGS_KEY","SPENDING_CATEGORIES_KEY","SinglePageTemplateComponent","inputWrapperClassName","onInit","wrapperClassName","children","h1LabelKey","t","className","window","location","href","split","pop","defaultProps","SinglePageTemplate","withNamespaces","Quote","rawText","i18nKey","text","QuoteSection","quoteI18nKey","paragraphMainKey","paragraphValue1","paragraphMinorKey","paragraphValue2","paragraphFinalKey","show","Home","dataForHome","init","nameUtenteMore","valueUtenteMore","nameGruppoMore","valueGruppoMore","nameUtenteBigPay","valueUtenteBigPay","LOADER_KEYS","LOADER_INCREASED","LOADER_DECREASED","increaseLoader","ALERT_SHOWN","ALERT_HIDDEN","ALERT_TYPE_SET","ALERT_SHOW_TIME_CHANGED","ALERT_STATE_RESET","FEEDBACK_MODAL_OPENED","FEEDBACK_MODAL_CLOSED","FEEDBACK_MODAL_TITLEKEY_SET","FEEDBACK_MODAL_SUBTITLEKEY_SET","FEEDBACK_MODAL_SUCCESS_SET","FEEDBACK_MODAL_STATE_RESET","MOCKED_HOST_NAME","LOCAL_BE_HOST_NAME","HOSTNAME_VALUES","HOSTNAME_OPTIONS","ALERT_TYPE_ERROR","ALERT_TYPE_SUCCESS","ALERT_TYPE_INFO","showAlert","setAlertType","alertType","showFeedbackModalWithProps","feedbackModalTitleKey","feedbackModalSubtitleKey","isFeedbackModalSuccess","setFeedbackModalTitle","setFeedbackModalSubtitle","setFeedbackModalSuccess","MAP_TYPE_TO_HOSTNAME","LOCAL_BE","LOCAL_MOCK_BE","getSettingsSlice","settingsReducer","getHostname","hostname","getSelectedHostname","selectedHostname","getCustomHostname","customHostname","isLocalBeHostname","isLocalMockBeHostname","isCustomHostnameSelected","isLocal","isLocalMock","isSelectHostnameFormDisabled","isCustom","httpsAgent","https","Agent","rejectUnauthorized","DEFAULT_HEADERS","combineConfigs","customHeaders","noRejectUnauthorized","otherConfigs","result","headers","API_VERBS","COMMON_READ_SETTINGS","handleErrorWithAlert","showSuccessAlert","COMMON_WRITE_SETTINGS","mapVerbToCommonSettings","handleApiresult","promise","onSuccess","onFailure","onFinally","then","catch","finally","res","commonHandler","promiseGetter","feedbackModalErrorProps","loader","commonSuccess","commonFailure","commonFinally","response","loaderKey","genericApiCall","verb","apiParams","settings","settingsToUse","endpoint","queryParams","body","url","axios","get","params","post","put","delete","HOME_INIT_FETCHED","HOME_INIT_URL","getInitResponse","homeReducer","initResponse","getName","obj","name","getValue","counter","getUtentePagatoPiuVolte","utentePagatoPiuVolte","getGruppoPartecipatoPiuVolte","gruppoPartecipatoPiuVolte","getUtenteBigPay","utenteBigPay","getNameUtentePagatoPiuVolte","getValueUtentePagatoPiuVolte","getNameGruppoPartecipatoPiuVolte","getValueGruppoPartecipatoPiuVolte","getNameUtenteBigPay","getValueUtenteBigPay","importo","resp","data","HomeContainer","ButtonComponent","onClick","labelKey","disabled","theme","width","style","Button","GenericFormComponent","preventDefaultOnSubmit","onSubmit","onClearForm","submitLabelKey","withClearButton","clearLabelKey","disableSubmitBtn","disableClearBtn","event","preventDefault","originalEvent","formDataEntries","FormData","target","entries","GenericForm","InputRow","Component1","Component2","centerIfSingle","marginBottom","centerClassName","CustomCheckbox","checked","onChange","color","label","FormControlLabel","control","Checkbox","value","console","log","CustomSelect","optionList","noneElement","noneElementLabel","valueOptionProp","textOptionProp","FormControl","InputLabel","Select","native","inputProps","aria-label","map","op","MultipleSelect","MenuProps","multiple","input","Input","option","MenuItem","PaperProps","maxHeight","ITEM_HEIGHT","DatePicker","dateFormat","utils","DateFnsUtils","disableToolbar","variant","format","margin","KeyboardButtonProps","defaultOnChange","onChangeByValue","validateChangeFn","valueGetterByEvent","newProps","TextField","isNaN","AddUserPage","username","addGroupWithSingleUser","changeUserName","changeAddGroupWithSingleUser","createUserAndGroup","resetCreateUserForm","USERS_STATE_RESET","USERNAME_CHANGED","ADD_GROUP_WITH_SINGLE_USER_CHANGED","CREATE_USER_SUBMITTED","CREATE_USER_FORM_RESET","USER_LIST_FETCHED","GROUP_NAME_CHANGED","GROUP_NOTES_CHANGED","GROUP_LIST_FETCHED","GROUP_SELECTED","ASSOCIATION_BY_GROUP_FETCHED","USER_SELECTED","RESET_ASSOCIATIONS","COMMON_PATH_PARAMS","ASSOCIAZIONE_SUB_URL","GET_ALL_USERS_ENDPOINT","GET_ALL_GROUPS_ENDPOIINT","ADD_USER_AND_GROUP_ENDPOINT","ADD_GROUP_AND_ASSOCIATIONS_ENDPOINT","GET_ASSOCIATION_BY_GROUP_ENDPOINT","SAVE_ASSOCIATION_ENDPOINT","DELETE_ASSOCIATION_ENDPOINT","getAllUsers","userList","fetchAllGroups","groupList","fetchAssociationByGroup","idGruppo","associationByGroup","id","idAssociazioneUtenteGruppo","selectGroupId","selectedGroupId","selectUserIds","selectedUserIds","commonInit","returnAsPromiseAll","Promise","all","usersSlice","usersReducer","getUsername","getAddGroupWithSingleUser","getUserList","createUserResponse","getUserById","idUtente","getGroupName","groupName","getGroupNotes","groupNotes","getGroupListRaw","getSelectedGroupId","getSelectedUserIds","getAssociationByGroup","getGroupList","list","gr","nomeGruppo","getUtentiNonAncoraAssociati","associazioni","utenti","filter","ut","ass","utente","getSelectedGroup","groups","getSelectedGroupName","group","getSelectedSingleUserId","ids","AddUserPageContainer","CreateGroupPage","changeGroupName","changeGroupNotes","createGroupByNameAndUSers","useState","users","setUsers","length","required","CreateGroupPageContainer","IconWithTooltip","tootlipMessage","tooltipMessageI18nKey","fontAwesomeIconProps","otherTooltipDivProps","otherTooltipSpanProps","FinalComponent","tooltipText","otherPropsDiv","otherSpanProps","wrappedComponentProps","withHover","FontAwesomeIcon","columns","field","headerName","valueGetter","row","AssociationsTable","rows","pageSize","checkboxSelection","onSelectionChange","ManageUsersPage","handleSaveAssociations","resetAssociaUtenteGruppi","deleteAssociationList","onChangeSelectedGroup","selectedRows","setSelectedRows","icon","faTrash","size","rowIds","idsUtente","saveAssociation","replace","ManageUsersPageContainer","useStyles","makeStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","GenericModal","externalOpen","isOpen","onClose","timeoutOnInit","classes","stateOpen","setOpen","open","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AssociationsModal","associationList","GroupListSelect","selectedGroupName","isAssociationsModalOpen","onOpenAssociationListModal","closeAssociationsModal","isIconEnabled","iconWrapperClass","faLink","isFalsyExceptZero","formatTmsToDateDDMMYYYY","tms","parts2","CheckboxCell","hideCheckbox","TableCell","handleValueGetter","payObj","componentRender","PaymentsTable","dataColumns","actionColumns","payments","handleInputChange","inquiryDataStructure","withCheckboxColumn","onChangeSelection","isUnselectable","unselectableRows","setUnselectableRows","isHeadCheckboxSelected","pay","idPagamento","Table","TableHead","TableRow","newRows","col","additionalHeadCellProps","headerLabelKey","paymentKey","action","actionKey","TableBody","index","isSelected","includes","concat","changeSelectionSingle","inputType","undefined","additionalCellProps","iconName","handleClick","additionalClassname","payment","staticActionColumns","faClone","align","faEraser","AddPaymentPage","resetAddPayments","selectedUserId","associationsByGroup","addPaymentRow","deletePaymentRow","clonePaymentRow","changePaymentInput","disabledForm","handleSubmitInputPayments","setActionColumns","faPlus","PAYMENTS_STATE_RESET","ASSOCIATIONS_MODAL_OPENED","ASSOCIATIONS_MODAL_CLOSED","INPUT_PAYMENT_ROW_ADDED","INPUT_PAYMENT_ROW_DELETED","INPUT_PAYMENT_ROW_CLONED","INPUT_PAYMENT_CHANGED","INPUT_PAYMENT_SUBMITTED","ADD_PAYMENTS_RESET","FETCH_PAYMENTS_BY_FILTERS_STARTED","PAYMENTS_BY_FILTERS_FETCHED","DIFF_REPORT_FETCHED","AGGREGATE_REPORT_FETCHED","SPENDING_CATEGORIES_FETCHED","SPENDING_CATEGORY_SELECTED","SPENDING_CATEGORY_NAME_CHANGED","SPENDING_CATEGORY_NOTES_CHANGED","CONTROLLER_SUB_URL","FETCH_ALL_URL","ADD_CATEGORY_URL","fetchAllSpendingCategories","categoryList","idCategoriaSpesa","PAYMENT_CONTROLLER_SUB_URL","MASSIVE_SAVE_PAYMENT_URL","FETCH_PAYMENTS_WITH_FILTERS_URL","PAYMENTS_MASSIVE_UPDATE_URL","REPORTS_DIFF_BY_USERS_URL","REPORTS_AGGREGATE_BY_USERS_URL","fetchPaymentsByFiltersFromBody","fetchByFiltersRequest","fetchByFiltersResponse","spendingCategorySlice","spendingCategoriesReducer","getCategoryList","getNomeCategoria","selectedCategoryId","nomeCategoria","getNoteCategoria","noteCategoria","paymentsSlice","paymentsReducer","associationModalOpen","getInputPayments","inputPayments","getFetchByFiltersRequest","getFetchByFiltersResponse","getDiffReportResponse","diffReportResponse","getAggregateReportResponse","aggregateReportResponse","getByFiltersList","listFetchedAtLeastOnce","aggregateAmountByFiltyers","fetched","reduce","total","current","getDataColumns","getDisabledAddPaymentsForm","some","Object","values","getDataStructureForDiffReport","diffResponse","diff","utente1","utente2","getTotAvereDto","userObj1","leftArrowUser","rightArrowUser","amount","totAvere","CONSTANTS","getDataStructureForAggregateReport","aggregateReponse","currentEntry","userId","userObj","showMinnicuImg","data1","data2","commonMapStateToProps","selectedUserIdList","commonMapDispatchToProps","paymentIndex","idUtentePagante","idGruppoPartecipante","rawPayments","acc","massiveSaveResponse","AddPaymentPageContainer","Accordion","textKey","iconIfClosed","iconIfOpen","withUnderline","Collapse","faChevronRight","faChevronDown","SearchPaymentsForm","paymentId","changePaymentId","importoMin","changeImportoMin","importoMax","changeImportoMax","selectedCategory","selectCategory","description","changeDescription","flgPagato","changeFlgPagato","dateInsMin","setDateInsMin","dateInsMax","setDateInsMax","dateModMin","setDateModMin","dateModMax","setDateModMax","descrizione","tmsInserimentoMin","tmsInserimentoMax","tmsModificaMin","tmsModificaMax","gruppo","categoriaSpesa","flag","SearchPaymentsResult","aggregateAmount","markPaymentsAsPaid","lastFetchRequest","faMoneyCheck","SearchPaymentsAccordion","CommonReportAccordion","accordionTextKey","infoTooltipLabelKey","dangerouslySetInnerHTML","__html","faInfoCircle","minWidth","OutputRow","element","faArrowRight","DiffReportAccordion","getReportDiffByUsers","dataStructureForDiffReport","getClassNameByAmount","classAggregate","AggregateReportAccordion","getReportAggregateByUser","dataStructureForAggregateReport","MinnicuModal","shouldShowMinnicuModal","src","height","ReportsPage","fetchPaymentsByFilters","shouldShowMinnicuImg","rawBody","entry","paymentIds","idList","ReportsPageContainer","SettingsPage","isFormDisabled","changeCustomHostname","selectHostname","isCustomSelected","setHostnameByType","hostnameOptions","setHostnameOptions","HOSTNAME_CHANGED","HOSTNAME_SELECTED","CUSTOM_HOSTNAME_CHANGED","newHostname","SettingsPageContainer","SpendingCategoriesComponent","changeSpendingCategoryName","changeSpendingCategoryNotes","insertSpendingCategory","SpendingCategories","SpendingCategoriesContainer","initialState","initialActiveIcon","newState","ALERT_DEFAULT_SHOW_TIME","FEEDBACK_DEFAULT_TITLE","FEEDBACK_DEFAULT_SUBTITLE","showTime","isFeedbackModalOpen","feedbackManagerReducer","loaderSlice","loaderReducer","getOldValueByDotNotation","parts","accumulatedState","currentKey","GLOBAL","USER","TEST_SUB_KEY","getNewStateByDotNotation","add","subState","currentCounter","secondAddend","emptyPayment","partOne","slice","partTwo","partThree","newPayments","logger","createLogger","level","duration","history","createBrowserHistory","configureStore","preloadedState","middlewares","thunkMiddleware","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","compose","createStore","combineReducers","router","connectRouter","AppRouter","path","SidebarIcon","iconSettings","faHome","openSecondLevel","faEuroSign","faUser","faFunnelDollar","faCog","SidebarIconWrapper","iconSetting","openSidebarWithChildren","selectedClassName","clickedClassName","initMenu","menuIcon","SidebarContainer","Element","SecondLevelSidebarContent","toggleSecondLevelSidebar","SecondLevelSidebarContainer","Content","mapTypeToLabelKey","mapTypeToIcon","faExclamationTriangle","faCheck","addShowClass","AlertBox","hideCallback","Alert","FeedbackModal","isSuccess","title","subtitle","iconColor","FeedbackManager","hideAlertCallback","onCloseFeedbackModal","feedbackManagerSlice","getShowAlert","getAlertType","getShowTime","getIsFeedbackModalOpen","getIsFeedbackModalSuccess","getFeedbackModalTitleKey","getFeedbackModalSubtitleKey","FeedbackManagerContainer","GlobalLoader","loading","CircularProgress","LayoutContainer","globalLoaderLoading","navigationEntry","performance","getEntriesByType","pathname","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","resources","it","translation","i18n","use","reactI18nextModule","lng","interpolation","escapeValue","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19716d17.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nexport const getMenuSlice = state => state.menuReducer;\r\n\r\nexport const getMenuItems = createSelector(\r\n  getMenuSlice,\r\n  state => state.menuItems\r\n);\r\nexport const getClickedIcon = createSelector(\r\n  getMenuSlice,\r\n  state => state.clickedIcon\r\n);\r\nexport const getActiveIcon = createSelector(\r\n  getMenuSlice,\r\n  state => state.activeIcon\r\n);\r\nexport const getSecondLevelSidebarOpen = createSelector(\r\n  getMenuSlice,\r\n  state => state.secondLevelSidebarOpen\r\n);\r\n\r\nexport const getIconObjectByKey = key => createSelector(\r\n  getMenuItems,\r\n  items => items && items.find(el => el.key === key)\r\n);\r\n","export const MENU_INIT = \"menu/init\";\r\nexport const MENU_ICON_CLICKED = \"menu/icon-clicked\";\r\nexport const MENU_ACTIVE_ICON_CHANGED = \"menu/active-icon-changed\";\r\nexport const MENU_SECOND_LEVEL_SIDEBAR_OPENED = \"menu/second-level-sidebar-opened\";\r\nexport const MENU_SECOND_LEVEL_SIDEBAR_CLOSED = \"menu/second-level-sidebar-closed\";\r\nexport const MENU_SECOND_LEVEL_SIDEBAR_TOGGLED = \"menu/second-level-sidebar-toggled\";","import {\r\n  MENU_INIT,\r\n  MENU_ICON_CLICKED,\r\n  MENU_ACTIVE_ICON_CHANGED,\r\n  MENU_SECOND_LEVEL_SIDEBAR_OPENED,\r\n  MENU_SECOND_LEVEL_SIDEBAR_CLOSED,\r\n  MENU_SECOND_LEVEL_SIDEBAR_TOGGLED\r\n} from \"./actionTypes\";\r\nimport { getSecondLevelSidebarOpen } from \"./selectors\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nexport const initMenu = (menuItems, initialActiveIcon) => ({\r\n  type: MENU_INIT,\r\n  payload: {\r\n    menuItems,\r\n    initialActiveIcon\r\n  }\r\n});\r\n\r\nexport const clickMenuIcon = clickedIcon => ({\r\n  type: MENU_ICON_CLICKED,\r\n  payload: {\r\n    clickedIcon\r\n  }\r\n});\r\n\r\nexport const changeActiveIcon = activeIcon => ({\r\n  type: MENU_ACTIVE_ICON_CHANGED,\r\n  payload: {\r\n    activeIcon\r\n  }\r\n});\r\n\r\nexport const openSecondLevelSidebar = () => ({\r\n  type: MENU_SECOND_LEVEL_SIDEBAR_OPENED\r\n});\r\nexport const closeSecondLevelSidebar = () => ({\r\n  type: MENU_SECOND_LEVEL_SIDEBAR_CLOSED\r\n});\r\nexport const toggleSecondLevelSidebar = () => ({\r\n  type: MENU_SECOND_LEVEL_SIDEBAR_TOGGLED\r\n});\r\n\r\nexport const closeSidebarAndResetIconClicked = () => (dispatch, getState) => {\r\n  if(getSecondLevelSidebarOpen(getState())){\r\n    dispatch(closeSecondLevelSidebar());\r\n    dispatch(clickMenuIcon(null));\r\n  }\r\n};\r\n\r\nexport const navigateAndCloseSidebar = (\r\n  route,\r\n  milliseconds = 0\r\n) => dispatch => {\r\n  dispatch(push(route));\r\n  setTimeout(() => {\r\n    dispatch(closeSidebarAndResetIconClicked());\r\n  }, milliseconds);\r\n};\r\n\r\nexport const openSidebarWithChildren = menuIcon => dispatch => {\r\n  dispatch(clickMenuIcon(menuIcon));\r\n  dispatch(openSecondLevelSidebar());\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIconObjectByKey, getMenuItems } from \"../../../redux/menu/selectors\";\r\nimport { changeActiveIcon } from \"../../../redux/menu/actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  getIconObjByKey: key => getIconObjectByKey(key)(state),\r\n  menuItems:getMenuItems(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeActiveIcon\r\n};\r\n\r\nconst disconnectedWithChangeIconOnInit = iconKey => WrappedComponent => props => {\r\n  const { getIconObjByKey, changeActiveIcon, menuItems } = props;\r\n  useEffect(() => {\r\n    const iconObj = getIconObjByKey(iconKey);\r\n    iconObj && changeActiveIcon(iconObj);\r\n  }, [menuItems]);\r\n  return (\r\n    <>\r\n      <WrappedComponent {...props} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const withChangeIconOnInit = iconKey => WrappedComponent =>\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(disconnectedWithChangeIconOnInit(iconKey)(WrappedComponent));\r\n","// ****************** ROUTES *********************\r\nconst BASE_HREF = \"/spese-casa\";\r\n\r\nexport const ADD_USER_ROUTE = BASE_HREF + \"/add-user\";\r\nexport const CREATE_GROUP_ROUTE = BASE_HREF + \"/create-group\";\r\nexport const MANAGE_USER_ROUTE = BASE_HREF + \"/manage-user\";\r\nexport const ADD_PAYMENT_ROUTE = BASE_HREF + \"/add-payment\";\r\nexport const REPORTS_ROUTE = BASE_HREF + \"/reports\";\r\nexport const SETTINGS_ROUTE = BASE_HREF + \"/settings\";\r\nexport const SPENDING_CATEGORIES_ROUTE = BASE_HREF + \"/spending-categories\";\r\nexport const HOME_ROUTE = BASE_HREF + \"/\";\r\n\r\n// ***************** MENU ********************\r\nexport const HOME_KEY = \"home\";\r\nexport const PAYMENTS_KEY = \"payments\";\r\nexport const ADD_PAYMENT_KEY = \"add-payment\";\r\nexport const REPORTS_KEY = \"reports\";\r\nexport const USERS_KEY = \"users\";\r\nexport const ADD_USER_KEY = \"add-user\";\r\nexport const CREATE_GROUP_KEY = \"create-group\";\r\nexport const MANAGE_USER_KEY = \"manage-user\";\r\nexport const SETTINGS_KEY = \"settings\";\r\nexport const SPENDING_CATEGORIES_KEY = \"spending-categories\";\r\n\r\n// ***************** STYLE ********************\r\nexport const SIDEBAR_COLOR_EX = \"#007cffad\";","import { useEffect } from \"react\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport \"./SinglePageTemplate.scss\";\r\n\r\nconst getWrapperClassName = (inputWrapperClassName) => {\r\n  if(inputWrapperClassName){\r\n    return inputWrapperClassName;\r\n  }\r\n  const urlParts = window.location.href.split(\"/\");\r\n  return urlParts.pop();\r\n}\r\n\r\nconst SinglePageTemplateComponent = ({\r\n  onInit,\r\n  wrapperClassName,\r\n  children,\r\n  h1LabelKey,\r\n  t\r\n}) => {\r\n  useEffect(() => {\r\n    onInit && onInit();\r\n  }, []);\r\n  return (\r\n    <div className={\"single-page-template \" + getWrapperClassName(wrapperClassName)}>\r\n      {h1LabelKey && <h1 className=\"h1-txt\">{t(h1LabelKey)}</h1>}\r\n      <div>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSinglePageTemplateComponent.defaultProps = {\r\n  wrapperClassName: \"\",\r\n  h1LabelKey: \"\"\r\n};\r\n\r\nexport const SinglePageTemplate = withNamespaces()(SinglePageTemplateComponent);\r\n","import { withNamespaces } from \"react-i18next\";\r\nimport \"./Quote.scss\";\r\n\r\nexport const Quote = withNamespaces()(({ rawText, i18nKey, t }) => {\r\n  const text = i18nKey ? t(i18nKey) : rawText;\r\n  return <p className=\"quote\">{`“${text}”`}</p>;\r\n});\r\n\r\nQuote.defaultProps = {\r\n  rawText: \"\"\r\n};\r\n","import { withNamespaces } from \"react-i18next\";\r\nimport { Quote } from \"../../../common/components/quote/Quote\";\r\nimport \"./QuoteSection.scss\";\r\n\r\nexport const QuoteSection = withNamespaces()(\r\n  ({\r\n    t,\r\n    children,\r\n    quoteI18nKey,\r\n    paragraphMainKey,\r\n    paragraphValue1,\r\n    paragraphMinorKey,\r\n    paragraphValue2,\r\n    paragraphFinalKey,\r\n    show\r\n  }) => {\r\n    if (!show) {\r\n      return <></>;\r\n    }\r\n    return (\r\n      <section className=\"section-wrapper\">\r\n        <Quote i18nKey={t(quoteI18nKey)} />\r\n        <p>\r\n          <span>{t(paragraphMainKey)}</span>\r\n          <span className=\"additional-content\">{paragraphValue1}</span>\r\n          <span>{t(paragraphMinorKey)}</span>\r\n          <span className=\"additional-content\">{paragraphValue2}</span>\r\n          <span>{t(paragraphFinalKey)}</span>\r\n        </p>\r\n        {children}\r\n      </section>\r\n    );\r\n  }\r\n);\r\n","import { withChangeIconOnInit } from \"../../common/hocs/withChangeIconOnInit\";\r\nimport { HOME_KEY } from \"../../common/constants\";\r\nimport { SinglePageTemplate } from \"../../layout/content/single-page-template/SinglePageTemplate\";\r\nimport { QuoteSection } from \"./quote-section/QuoteSection\";\r\n\r\nconst HomeComponent = ({ dataForHome, init }) => {\r\n  const {\r\n    nameUtenteMore,\r\n    valueUtenteMore,\r\n    nameGruppoMore,\r\n    valueGruppoMore,\r\n    nameUtenteBigPay,\r\n    valueUtenteBigPay\r\n  } = dataForHome;\r\n\r\n  return (\r\n    <SinglePageTemplate onInit={init} h1LabelKey=\"HOME.TITLE\">\r\n      <div>\r\n        <QuoteSection\r\n          show={!!nameUtenteMore}\r\n          quoteI18nKey=\"HOME.QUOTE_1\"\r\n          paragraphMainKey=\"HOME.SUB_QUOTE_1\"\r\n          paragraphMinorKey=\"HOME.SUB_QUOTE_ADDITIONAL_1\"\r\n          paragraphFinalKey=\"HOME.SUB_QUOTE_ENDING_COMMON\"\r\n          paragraphValue1={nameUtenteMore}\r\n          paragraphValue2={valueUtenteMore}\r\n        />\r\n        <QuoteSection\r\n          show={!!nameGruppoMore}\r\n          quoteI18nKey=\"HOME.QUOTE_2\"\r\n          paragraphMainKey=\"HOME.SUB_QUOTE_2\"\r\n          paragraphMinorKey=\"HOME.SUB_QUOTE_ADDITIONAL_2\"\r\n          paragraphFinalKey=\"HOME.SUB_QUOTE_ENDING_COMMON\"\r\n          paragraphValue1={nameGruppoMore}\r\n          paragraphValue2={valueGruppoMore}\r\n        />\r\n        <QuoteSection\r\n          show={!!nameUtenteBigPay}\r\n          quoteI18nKey=\"HOME.QUOTE_3\"\r\n          paragraphMainKey=\"HOME.SUB_QUOTE_3\"\r\n          paragraphMinorKey=\"HOME.SUB_QUOTE_ADDITIONAL_3\"\r\n          //paragraphFinalKey=\"HOME.SUB_QUOTE_ENDING_COMMON\"\r\n          paragraphValue1={nameUtenteBigPay}\r\n          paragraphValue2={`${valueUtenteBigPay}€`}\r\n        />\r\n      </div>\r\n    </SinglePageTemplate>\r\n  );\r\n};\r\n\r\nexport const Home = withChangeIconOnInit(HOME_KEY)(HomeComponent);\r\n","export const LOADER_KEYS = {\r\n    GLOBAL:'GLOBAL'\r\n}","export const LOADER_INCREASED = \"LOADER/LOADER_INCREASED\";\r\nexport const LOADER_DECREASED = \"LOADER/LOADER_DECREASED\";","import { LOADER_INCREASED, LOADER_DECREASED } from \"./actionTypes\";\r\n\r\nexport const increaseLoader = key => ({\r\n  type: LOADER_INCREASED,\r\n  payload: { key }\r\n});\r\n\r\nexport const decreaseLoader = key => ({\r\n  type: LOADER_DECREASED,\r\n  payload: { key }\r\n});\r\n","export const ALERT_SHOWN = \"FEEDBACK/ALERT_SHOWN\";\r\nexport const ALERT_HIDDEN = \"FEEDBACK/ALERT_HIDDEN\";\r\nexport const ALERT_TYPE_SET = \"FEEDBACK/ALERT_TYPE_SET\";\r\nexport const ALERT_SHOW_TIME_CHANGED = \"FEEDBACK/ALERT_SHOW_TIME_CHANGED\";\r\nexport const ALERT_STATE_RESET = \"FEEDBACK/ALERT_STATE_RESET\";\r\n\r\nexport const FEEDBACK_MODAL_OPENED = \"FEEDBACK/FEEDBACK_MODAL_OPENED\";\r\nexport const FEEDBACK_MODAL_CLOSED = \"FEEDBACK/FEEDBACK_MODAL_CLOSED\";\r\nexport const FEEDBACK_MODAL_TITLEKEY_SET = \"FEEDBACK/FEEDBACK_MODAL_TITLEKEY_SET\";\r\nexport const FEEDBACK_MODAL_SUBTITLEKEY_SET = \"FEEDBACK/FEEDBACK_MODAL_SUBTITLEKEY_SET\";\r\nexport const FEEDBACK_MODAL_SUCCESS_SET = \"FEEDBACK/FEEDBACK_MODAL_SUCCESS_SET\";\r\nexport const FEEDBACK_MODAL_STATE_RESET = \"FEEDBACK/FEEDBACK_MODAL_STATE_RESET\";\r\n\r\n","//HOSTNAME\r\nexport const MOCKED_HOST_NAME = \"http://localhost:4000\";\r\nexport const LOCAL_BE_HOST_NAME = \"http://localhost:8080\";\r\nexport const HOSTNAME_VALUES = {\r\n  LOCAL_BE: \"LOCAL_BE\",\r\n  LOCAL_MOCK_BE: \"LOCAL_MOCK_BE\",\r\n  CUSTOM: \"CUSTOM\"\r\n};\r\nexport const HOSTNAME_OPTIONS = [\r\n  HOSTNAME_VALUES.LOCAL_BE,\r\n  HOSTNAME_VALUES.LOCAL_MOCK_BE,\r\n  HOSTNAME_VALUES.CUSTOM\r\n];\r\n\r\n//FEEDBACK\r\nexport const ALERT_TYPE_ERROR = \"error\";\r\nexport const ALERT_TYPE_SUCCESS = \"success\";\r\nexport const ALERT_TYPE_INFO = \"info\";\r\n","import {\r\n  ALERT_SHOWN,\r\n  ALERT_HIDDEN,\r\n  ALERT_TYPE_SET,\r\n  ALERT_SHOW_TIME_CHANGED,\r\n  ALERT_STATE_RESET,\r\n  FEEDBACK_MODAL_OPENED,\r\n  FEEDBACK_MODAL_CLOSED,\r\n  FEEDBACK_MODAL_TITLEKEY_SET,\r\n  FEEDBACK_MODAL_SUBTITLEKEY_SET,\r\n  FEEDBACK_MODAL_SUCCESS_SET,\r\n  FEEDBACK_MODAL_STATE_RESET\r\n} from \"./actionTypes\";\r\n\r\nimport {\r\n  ALERT_TYPE_ERROR,\r\n  ALERT_TYPE_SUCCESS,\r\n  ALERT_TYPE_INFO\r\n} from \"../common/constants\";\r\n\r\n//******************** ALERT *********************/\r\nexport const showAlert = () => ({ type: ALERT_SHOWN });\r\n\r\nexport const hideAlert = () => ({ type: ALERT_HIDDEN });\r\n\r\nexport const setAlertType = alertType => ({\r\n  type: ALERT_TYPE_SET,\r\n  payload: { alertType }\r\n});\r\nexport const changeAlertShowTime = showTime => ({\r\n  type: ALERT_SHOW_TIME_CHANGED,\r\n  payload: showTime\r\n});\r\n\r\nexport const resetAlertState = () => ({ type: ALERT_STATE_RESET });\r\n\r\nexport const showErrorAlert = () => dispatch => {\r\n  dispatch(setAlertType(ALERT_TYPE_ERROR));\r\n  dispatch(showAlert());\r\n};\r\n\r\nexport const showSuccessAlert = () => dispatch => {\r\n  dispatch(setAlertType(ALERT_TYPE_SUCCESS));\r\n  dispatch(showAlert());\r\n};\r\n\r\nexport const showInfoAlert = () => dispatch => {\r\n  dispatch(setAlertType(ALERT_TYPE_INFO));\r\n  dispatch(showAlert());\r\n};\r\n\r\n//******************** FEEDBACK MODAL *********************/\r\n\r\nexport const showFeedbackModal = () => ({ type: FEEDBACK_MODAL_OPENED });\r\nexport const hideFeedbackModal = () => ({ type: FEEDBACK_MODAL_CLOSED });\r\n\r\nexport const setFeedbackModalTitle = feedbackModalTitleKey => ({\r\n  type: FEEDBACK_MODAL_TITLEKEY_SET,\r\n  payload: { feedbackModalTitleKey }\r\n});\r\nexport const setFeedbackModalSubtitle = feedbackModalSubtitleKey => ({\r\n  type: FEEDBACK_MODAL_SUBTITLEKEY_SET,\r\n  payload: { feedbackModalSubtitleKey }\r\n});\r\n\r\nexport const setFeedbackModalSuccess = isFeedbackModalSuccess => ({\r\n  type: FEEDBACK_MODAL_SUCCESS_SET,\r\n  payload: { isFeedbackModalSuccess }\r\n});\r\nexport const resetFeedbackModalState = () => ({\r\n  type: FEEDBACK_MODAL_STATE_RESET\r\n});\r\n\r\nexport const showFeedbackModalWithProps = (\r\n  feedbackModalTitleKey,\r\n  feedbackModalSubtitleKey,\r\n  isFeedbackModalSuccess\r\n) => dispatch => {\r\n  dispatch(setFeedbackModalTitle(feedbackModalTitleKey));\r\n  dispatch(setFeedbackModalSubtitle(feedbackModalSubtitleKey));\r\n  dispatch(setFeedbackModalSuccess(isFeedbackModalSuccess));\r\n  dispatch(showFeedbackModal());\r\n};\r\n","import {\r\n  HOSTNAME_VALUES,\r\n  LOCAL_BE_HOST_NAME,\r\n  MOCKED_HOST_NAME\r\n} from \"../common/constants\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nexport const MAP_TYPE_TO_HOSTNAME = {\r\n  LOCAL_BE: LOCAL_BE_HOST_NAME,\r\n  LOCAL_MOCK_BE: MOCKED_HOST_NAME\r\n};\r\n\r\nexport const getSettingsSlice = state => state.settingsReducer;\r\n\r\nexport const getHostname = createSelector(\r\n  getSettingsSlice,\r\n  state => state.hostname\r\n);\r\n\r\nexport const getSelectedHostname = createSelector(\r\n  getSettingsSlice,\r\n  state => state.selectedHostname\r\n);\r\n\r\nexport const getCustomHostname = createSelector(\r\n  getSettingsSlice,\r\n  state => state.customHostname\r\n);\r\n\r\nexport const isLocalBeHostname = createSelector(\r\n  getHostname,\r\n  hostname => hostname === LOCAL_BE_HOST_NAME\r\n);\r\nexport const isLocalMockBeHostname = createSelector(\r\n  getHostname,\r\n  hostname => hostname === MOCKED_HOST_NAME\r\n);\r\n\r\nexport const isCustomHostname = createSelector(\r\n  isLocalBeHostname,\r\n  isLocalMockBeHostname,\r\n  (isLocal, isLocalMock) => !isLocal && !isLocalMock\r\n);\r\n\r\nexport const isCustomHostnameSelected = createSelector(\r\n  getSelectedHostname,\r\n  selectedHostname => selectedHostname === HOSTNAME_VALUES.CUSTOM\r\n);\r\n\r\nexport const isSelectHostnameFormDisabled = createSelector(\r\n  getSelectedHostname,\r\n  isCustomHostnameSelected,\r\n  getCustomHostname,\r\n  (selectedHostname, isCustom, customHostname) =>\r\n    !selectedHostname || (isCustom && !customHostname)\r\n);\r\n","import axios from \"axios\";\r\nimport https from \"https\";\r\nimport { LOADER_KEYS } from \"../loader/loaderKeys\";\r\nimport { increaseLoader, decreaseLoader } from \"../loader/actions\";\r\nimport {\r\n  showSuccessAlert,\r\n  showErrorAlert,\r\n  showFeedbackModalWithProps\r\n} from \"../feedback-manager/actions\";\r\n\r\nimport { getHostname } from \"../settings/selectors\";\r\n\r\nconst httpsAgent = new https.Agent({\r\n  rejectUnauthorized: false\r\n});\r\n\r\nconst DEFAULT_HEADERS = { \"Access-Control-Allow-Origin\": \"*\" };\r\n\r\nconst combineConfigs = (customHeaders, noRejectUnauthorized, otherConfigs) => {\r\n  const result = {\r\n    headers: { ...DEFAULT_HEADERS, ...(customHeaders || {}) },\r\n    httpsAgent,\r\n    ...otherConfigs\r\n  };\r\n  if (noRejectUnauthorized) {\r\n    delete result.httpsAgent;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const API_VERBS = {\r\n  POST: \"post\",\r\n  GET: \"get\",\r\n  PUT: \"put\",\r\n  DELETE: \"delete\"\r\n};\r\n\r\nexport const COMMON_READ_SETTINGS = {\r\n  handleErrorWithAlert: true,\r\n  showSuccessAlert: false\r\n};\r\n\r\nconst COMMON_WRITE_SETTINGS = {\r\n  handleErrorWithAlert: true,\r\n  showSuccessAlert: true\r\n};\r\n\r\nconst mapVerbToCommonSettings = {\r\n  [API_VERBS.GET]: COMMON_READ_SETTINGS,\r\n  [API_VERBS.POST]: COMMON_WRITE_SETTINGS,\r\n  [API_VERBS.PUT]: COMMON_WRITE_SETTINGS,\r\n  [API_VERBS.DELETE]: COMMON_WRITE_SETTINGS\r\n};\r\n\r\nconst handleApiresult = (promise, onSuccess, onFailure, onFinally) =>\r\n  promise\r\n    .then(onSuccess)\r\n    .catch(onFailure)\r\n    .finally(res => {\r\n      if (onFinally) {\r\n        return onFinally(res);\r\n      }\r\n      return res;\r\n    });\r\n\r\nexport const performGet = (\r\n  url,\r\n  queryParams,\r\n  onSuccess,\r\n  onFailure,\r\n  onFinally\r\n) => {\r\n  return handleApiresult(\r\n    axios.get(url, { params: queryParams || {} }),\r\n    onSuccess,\r\n    onFailure,\r\n    onFinally\r\n  );\r\n};\r\n\r\nconst commonHandler = ({\r\n  dispatch,\r\n  promiseGetter,\r\n  onSuccess,\r\n  showSuccessAlert,\r\n  onFailure,\r\n  handleErrorWithAlert,\r\n  feedbackModalErrorProps,\r\n  loader\r\n}) => {\r\n  return handleApiresult(\r\n    promiseGetter(),\r\n    commonSuccess(dispatch, onSuccess, showSuccessAlert),\r\n    commonFailure(\r\n      dispatch,\r\n      onFailure,\r\n      handleErrorWithAlert,\r\n      feedbackModalErrorProps\r\n    ),\r\n    commonFinally(dispatch, loader)\r\n  );\r\n};\r\n\r\nconst commonSuccess = (dispatch, onSuccess, showAlert) => response => {\r\n  onSuccess && onSuccess(response);\r\n  showAlert && dispatch(showSuccessAlert());\r\n};\r\n\r\nconst commonFailure = (\r\n  dispatch,\r\n  onFailure,\r\n  handleErrorWithAlert,\r\n  feedbackModalErrorProps\r\n) => response => {\r\n  onFailure && onFailure(response);\r\n  if (handleErrorWithAlert) {\r\n    dispatch(showErrorAlert());\r\n  } else {\r\n    const {\r\n      feedbackModalTitleKey,\r\n      feedbackModalSubtitleKey\r\n    } = feedbackModalErrorProps;\r\n    dispatch(\r\n      showFeedbackModalWithProps(\r\n        feedbackModalTitleKey,\r\n        feedbackModalSubtitleKey,\r\n        false\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nconst commonFinally = (dispatch, loaderKey) => response => {\r\n  dispatch(decreaseLoader(loaderKey));\r\n  return response;\r\n};\r\n\r\nexport const genericApiCall = (verb, apiParams, settings = {}) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  let settingsToUse = mapVerbToCommonSettings[verb];\r\n  if (settings) {\r\n    settingsToUse = { ...settingsToUse, ...settings };\r\n  }\r\n  const {\r\n    loaderKey,\r\n    handleErrorWithAlert,\r\n    showSuccessAlert,\r\n    feedbackModalErrorProps\r\n  } = settingsToUse;\r\n\r\n  const { endpoint, queryParams, body, onSuccess, onFailure } = apiParams;\r\n\r\n  const loader = loaderKey || LOADER_KEYS.GLOBAL;\r\n  const url = `${getHostname(getState())}/${endpoint}`;\r\n\r\n  dispatch(increaseLoader(loader));\r\n\r\n  switch (verb) {\r\n    case API_VERBS.GET: {\r\n      return commonHandler({\r\n        dispatch,\r\n        promiseGetter: () =>\r\n          axios.get(url, {\r\n            params: queryParams || {},\r\n            ...combineConfigs()\r\n          }),\r\n        onSuccess,\r\n        showSuccessAlert,\r\n        onFailure,\r\n        handleErrorWithAlert,\r\n        feedbackModalErrorProps,\r\n        loader\r\n      });\r\n    }\r\n    case API_VERBS.POST: {\r\n      return commonHandler({\r\n        dispatch,\r\n        promiseGetter: () =>\r\n          axios.post(url, { ...body }, { ...combineConfigs() }),\r\n        onSuccess,\r\n        showSuccessAlert,\r\n        onFailure,\r\n        handleErrorWithAlert,\r\n        feedbackModalErrorProps,\r\n        loader\r\n      });\r\n    }\r\n    case API_VERBS.PUT: {\r\n      return commonHandler({\r\n        dispatch,\r\n        promiseGetter: () =>\r\n          axios.put(url, { ...body }, { ...combineConfigs() }),\r\n        onSuccess,\r\n        showSuccessAlert,\r\n        onFailure,\r\n        handleErrorWithAlert,\r\n        feedbackModalErrorProps,\r\n        loader\r\n      });\r\n    }\r\n    case API_VERBS.DELETE: {\r\n      return commonHandler({\r\n        dispatch,\r\n        promiseGetter: () =>\r\n          axios.delete(url, { params: queryParams || {}, ...combineConfigs() }),\r\n        onSuccess,\r\n        showSuccessAlert,\r\n        onFailure,\r\n        handleErrorWithAlert,\r\n        feedbackModalErrorProps,\r\n        loader\r\n      });\r\n    }\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n};\r\n","export const HOME_INIT_FETCHED = \"HOME/HOME_INIT_FETCHED\";","import { API_VERBS, genericApiCall } from \"../api/utils\";\r\nimport { HOME_INIT_FETCHED } from \"./actionTypes\";\r\n\r\nconst PAGAMENTO_CONTROLLER_SUB_URL = \"pagamento\";\r\nconst HOME_INIT_URL = `${PAGAMENTO_CONTROLLER_SUB_URL}/home-init`;\r\n\r\nconst fetchHomeInit = initResponse => ({\r\n  type: HOME_INIT_FETCHED,\r\n  payload: { initResponse }\r\n});\r\n\r\nexport const init = () => dispatch =>\r\n  dispatch(\r\n    genericApiCall(API_VERBS.GET, {\r\n      endpoint: HOME_INIT_URL,\r\n      onSuccess: resp => dispatch(fetchHomeInit(resp.data))\r\n    })\r\n  );\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst homeSlice = state => state.homeReducer;\r\n\r\nconst getInitResponse = createSelector(homeSlice, state => state.initResponse);\r\n\r\nconst getName = obj => obj && obj.name;\r\nconst getValue = obj => obj && obj.counter;\r\n\r\nconst getUtentePagatoPiuVolte = createSelector(\r\n  getInitResponse,\r\n  response => response && response.utentePagatoPiuVolte\r\n);\r\nconst getGruppoPartecipatoPiuVolte = createSelector(\r\n  getInitResponse,\r\n  response => response && response.gruppoPartecipatoPiuVolte\r\n);\r\nconst getUtenteBigPay = createSelector(\r\n  getInitResponse,\r\n  response => response && response.utenteBigPay\r\n);\r\n\r\nconst getNameUtentePagatoPiuVolte = createSelector(\r\n  getUtentePagatoPiuVolte,\r\n  getName\r\n);\r\nconst getValueUtentePagatoPiuVolte = createSelector(\r\n  getUtentePagatoPiuVolte,\r\n  getValue\r\n);\r\nconst getNameGruppoPartecipatoPiuVolte = createSelector(\r\n  getGruppoPartecipatoPiuVolte,\r\n  getName\r\n);\r\nconst getValueGruppoPartecipatoPiuVolte = createSelector(\r\n  getGruppoPartecipatoPiuVolte,\r\n  getValue\r\n);\r\nconst getNameUtenteBigPay = createSelector(getUtenteBigPay, getName);\r\nconst getValueUtenteBigPay = createSelector(\r\n  getUtenteBigPay,\r\n  obj => obj && obj.importo\r\n);\r\n\r\nexport const dataForHome = createSelector(\r\n  getNameUtentePagatoPiuVolte,\r\n  getValueUtentePagatoPiuVolte,\r\n  getNameGruppoPartecipatoPiuVolte,\r\n  getValueGruppoPartecipatoPiuVolte,\r\n  getNameUtenteBigPay,\r\n  getValueUtenteBigPay,\r\n  (\r\n    nameUtenteMore,\r\n    valueUtenteMore,\r\n    nameGruppoMore,\r\n    valueGruppoMore,\r\n    nameUtenteBigPay,\r\n    valueUtenteBigPay\r\n  ) => ({\r\n    nameUtenteMore,\r\n    valueUtenteMore,\r\n    nameGruppoMore,\r\n    valueGruppoMore,\r\n    nameUtenteBigPay,\r\n    valueUtenteBigPay\r\n  })\r\n);\r\n","import { Home } from \"./Home\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { init } from \"../../../redux/home/actions\";\r\nimport {\r\n    dataForHome\r\n} from \"../../../redux/home/selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n    dataForHome:dataForHome(state)\r\n});\r\nconst mapDispatchToProps = { init };\r\n\r\nexport const HomeContainer = connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import { withNamespaces } from \"react-i18next\";\r\nimport \"./Button.scss\";\r\n\r\nconst ButtonComponent = ({ onClick, type, labelKey, disabled, theme, t, children, width }) => {\r\n  //const className = `common ${theme} ${disabled ? \"\": \"\"}`;\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      className={theme + \" common\"}\r\n      style={{width}}\r\n      disabled={disabled}\r\n    >\r\n      {labelKey && t(labelKey)}\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButtonComponent.defaultProps = {\r\n  theme: \"primary\",\r\n  disabled: false,\r\n  type: \"button\",\r\n  width:\"250px\"\r\n\r\n};\r\n\r\nexport const Button = withNamespaces()(ButtonComponent);\r\n","import { withNamespaces } from \"react-i18next\";\r\nimport \"./GenericForm.scss\";\r\nimport { Button } from \"../button/Button\";\r\n\r\nconst GenericFormComponent = ({\r\n  preventDefaultOnSubmit,\r\n  onSubmit,\r\n  onClearForm,\r\n  submitLabelKey,\r\n  withClearButton,\r\n  clearLabelKey,\r\n  disableSubmitBtn,\r\n  disableClearBtn,\r\n  children,\r\n  t\r\n}) => {\r\n  const handleSubmit = event => {\r\n    if (preventDefaultOnSubmit) {\r\n      event.preventDefault();\r\n    }\r\n    onSubmit({\r\n      originalEvent: event,\r\n      formDataEntries: new FormData(event.target).entries()\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-tag\">\r\n      <div className=\"inputs-container\">{children}</div>\r\n      <div className=\"submit-container\">\r\n        <Button\r\n          type=\"submit\"\r\n          labelKey={t(submitLabelKey)}\r\n          disabled={disableSubmitBtn}\r\n        />\r\n        {withClearButton && (\r\n          <span className=\"clear-btn-wrapper\">\r\n            <Button\r\n              type=\"button\"\r\n              theme=\"secondary\"\r\n              labelKey={t(clearLabelKey)}\r\n              onClick={onClearForm}\r\n              disabled={disableClearBtn}\r\n            />\r\n          </span>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nGenericFormComponent.defaultProps = {\r\n  preventDefaultOnSubmit: true,\r\n  submitLabelKey: \"COMMON.FORM.SUBMIT\",\r\n  clearLabelKey: \"COMMON.FORM.RESET\",\r\n  withClearButton: true,\r\n  disableSubmitBtn: false,\r\n  disableClearBtn: false\r\n};\r\n\r\nexport const GenericForm = withNamespaces()(GenericFormComponent);\r\n","import \"./InputRow.scss\";\r\n\r\nexport const InputRow = ({ Component1, Component2, centerIfSingle, marginBottom }) => {\r\n  const centerClassName =\r\n    centerIfSingle && !Component2 && !!Component1 ? \" center-all\" : \"\";\r\n  return (\r\n    <div className={`input-row${centerClassName}`} style={{ marginBottom }}>\r\n      {Component1}\r\n      {Component2}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputRow.defaultProps = {\r\n  centerIfSingle: true,\r\n  marginBottom:\"10px\"\r\n};\r\n","import { Checkbox, FormControlLabel } from \"@material-ui/core\";\r\n\r\nexport const CustomCheckbox = ({ checked, disabled, onChange, name, color, label }) => {\r\n  return (\r\n    <div className=\"MuiFormControl-root MuiTextField-root\">\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={checked}\r\n            onChange={onChange}\r\n            name={name}\r\n            value={checked}\r\n            color={color}\r\n            disabled={disabled}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomCheckbox.defaultProps = {\r\n  checked: false,\r\n  onChange: console.log,\r\n  color: \"primary\"\r\n};\r\n","import { FormControl, InputLabel, Select } from \"@material-ui/core\";\r\n\r\nexport const CustomSelect = ({\r\n  label,\r\n  value,\r\n  name,\r\n  onChange,\r\n  optionList,\r\n  noneElement,\r\n  noneElementLabel,\r\n  valueOptionProp,\r\n  textOptionProp\r\n}) => {\r\n  return (\r\n    <FormControl>\r\n      <InputLabel>{label}</InputLabel>\r\n      <Select\r\n        native\r\n        value={value}\r\n        onChange={onChange}\r\n        inputProps={{\r\n          name\r\n        }}\r\n      >\r\n        {noneElement && <option aria-label={noneElementLabel} value=\"\" />}\r\n        {optionList.map(op => {\r\n          const value = op[valueOptionProp];\r\n          return (\r\n          <option key={value} value={value}>{op[textOptionProp]}</option>\r\n        )})}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nCustomSelect.defaultProps = {\r\n  optionList: [],\r\n  noneElement: true,\r\n  noneElementLabel: \"None\",\r\n  valueOptionProp:\"value\",\r\n  textOptionProp:\"text\"\r\n};\r\n","import {\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select\r\n} from \"@material-ui/core\";\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst DefaultMenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nexport const MultipleSelect = ({\r\n  label,\r\n  value,\r\n  name,\r\n  onChange,\r\n  MenuProps,\r\n  optionList,\r\n  valueOptionProp,\r\n  textOptionProp\r\n}) => {\r\n  return (\r\n    <FormControl >\r\n      <InputLabel>{label}</InputLabel>\r\n      <Select\r\n        multiple\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<Input />}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {optionList.map(option => (\r\n          <MenuItem\r\n            key={option[valueOptionProp]}\r\n            value={option[valueOptionProp]}\r\n          >\r\n            {option[textOptionProp]}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nMultipleSelect.defaultProps = {\r\n  MenuProps: DefaultMenuProps,\r\n  optionList: [],\r\n  value:[],\r\n  valueOptionProp: \"value\",\r\n  textOptionProp: \"text\"\r\n};\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\n\r\nexport const DatePicker = props => {\r\n  const { label, dateFormat, value, onChange } = props;\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <KeyboardDatePicker\r\n        disableToolbar\r\n        variant=\"inline\"\r\n        format={dateFormat}\r\n        margin=\"normal\"\r\n        label={label}\r\n        value={value}\r\n        onChange={onChange}\r\n        KeyboardButtonProps={{\r\n          \"aria-label\": \"change date\"\r\n        }}\r\n        {...props}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nDatePicker.defaultProps = {\r\n  dateFormat: \"dd/MM/yyyy\"\r\n};\r\n","import { TextField } from \"@material-ui/core\";\r\nimport { CustomCheckbox } from \"../custom-checkbox/CustomCheckbox\";\r\nimport { CustomSelect } from \"../custom-select/CustomSelect\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport { MultipleSelect } from \"../multiple-select/MultipleSelect\";\r\nimport { DatePicker } from \"../date-picker/DatePicker\";\r\n\r\nconst defaultOnChange = (\r\n  onChange,\r\n  onChangeByValue,\r\n  validateChangeFn,\r\n  valueGetterByEvent = event => event.target.value\r\n) => event => {\r\n  onChange && onChange(event);\r\n  const value = valueGetterByEvent(event);\r\n  if (!validateChangeFn || validateChangeFn(value)) {\r\n    onChangeByValue && onChangeByValue(value);\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * For now just a wrapper\r\n */\r\nconst Input = withNamespaces()(props => {\r\n  const { t, type, labelKey, onChangeByValue, onChange } = props;\r\n  const newProps = {\r\n    ...props,\r\n    label: t(labelKey),\r\n    onChange: defaultOnChange(onChange, onChangeByValue)\r\n  };\r\n  switch (type) {\r\n    case \"select\": {\r\n      return <CustomSelect {...newProps} />;\r\n    }\r\n    case \"multiple-select\": {\r\n      return <MultipleSelect {...newProps} />;\r\n    }\r\n    case \"checkbox\": {\r\n      return <CustomCheckbox {...newProps} />;\r\n    }\r\n    case \"date-picker\": {\r\n      return (\r\n        <DatePicker\r\n          {...newProps}\r\n          onChange={defaultOnChange(\r\n            onChange,\r\n            onChangeByValue,\r\n            null,\r\n            event => event\r\n          )}\r\n        />\r\n      );\r\n    }\r\n    case \"number\": {\r\n      return (\r\n        <TextField\r\n          {...newProps}\r\n          onChange={defaultOnChange(\r\n            onChange,\r\n            onChangeByValue,\r\n            value => !isNaN(value)\r\n          )}\r\n        />\r\n      );\r\n    }\r\n    default: {\r\n      return <TextField {...newProps} />;\r\n    }\r\n  }\r\n});\r\n\r\nInput.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport { Input };\r\n","import { withChangeIconOnInit } from \"../../../common/hocs/withChangeIconOnInit\";\r\nimport { USERS_KEY } from \"../../../common/constants\";\r\nimport { GenericForm } from \"../../../common/components/form/generic-form/GenericForm\";\r\nimport \"./AddUserPage.scss\";\r\nimport { InputRow } from \"../../../common/components/form/input-row/InputRow\";\r\nimport { Input } from \"../../../common/components/form/input/Input\";\r\nimport { SinglePageTemplate } from \"../../../layout/content/single-page-template/SinglePageTemplate\";\r\n\r\nconst AddUserPageComponent = ({\r\n  username,\r\n  addGroupWithSingleUser,\r\n  changeUserName,\r\n  changeAddGroupWithSingleUser,\r\n  createUserAndGroup,\r\n  resetCreateUserForm\r\n}) => {\r\n  const handleSubmit = ({ formDataEntries }) => {\r\n    createUserAndGroup(username, addGroupWithSingleUser);\r\n  };\r\n  return (\r\n    <SinglePageTemplate h1LabelKey=\"USERS.TITLE\">\r\n      <GenericForm onSubmit={handleSubmit} onClearForm={resetCreateUserForm}>\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              name={\"username\"}\r\n              labelKey={\"USERS.USERNAME_LABEL\"}\r\n              value={username}\r\n              onChange={event => changeUserName(event.target.value)}\r\n            />\r\n          }\r\n          Component2={\r\n            <Input\r\n              labelKey={\"USERS.ADD_GROUP_WITH_SINGLE_USER_LABEL\"}\r\n              name={\"addGroup\"}\r\n              type=\"checkbox\"\r\n              checked={addGroupWithSingleUser}\r\n              onChange={event =>\r\n                changeAddGroupWithSingleUser(event.target.checked)\r\n              }\r\n            />\r\n          }\r\n        />\r\n      </GenericForm>\r\n    </SinglePageTemplate>\r\n  );\r\n};\r\n\r\nexport const AddUserPage = withChangeIconOnInit(USERS_KEY)(\r\n  AddUserPageComponent\r\n);\r\n","//COMMON\r\nexport const USERS_STATE_RESET = \"USERS/COMMON/USERS_STATE_RESET\";\r\n\r\n//CREATE USER PAGE\r\nexport const USERNAME_CHANGED = \"USERS/CREATE_USER/USERNAME_CHANGED\";\r\nexport const ADD_GROUP_WITH_SINGLE_USER_CHANGED = \"USERS/CREATE_USER/ADD_GROUP_WITH_SINGLE_USER_CHANGED\";\r\nexport const CREATE_USER_SUBMITTED = \"USERS/CREATE_USER/CREATE_USER_SUBMITTED\";\r\nexport const CREATE_USER_FORM_RESET = \"USERS/CREATE_USER/CREATE_USER_FORM_RESET\";\r\n\r\n//CREATE GROUP PAGE\r\nexport const USER_LIST_FETCHED = \"USERS/CREATE_GROUP/USER_LIST_FETCHED\";\r\nexport const GROUP_NAME_CHANGED = \"USERS/CREATE_GROUP/GROUP_NAME_CHANGED\";\r\nexport const GROUP_NOTES_CHANGED = \"USERS/CREATE_GROUP/GROUP_NOTES_CHANGED\";\r\n\r\n//ASSOCIATE PAGE\r\nexport const GROUP_LIST_FETCHED = \"USERS/CREATE_ASSOCIATIONS/GROUP_LIST_FETCHED\";\r\nexport const GROUP_SELECTED = \"USERS/CREATE_ASSOCIATIONS/GROUP_SELECTED\";\r\nexport const ASSOCIATION_BY_GROUP_FETCHED = \"USERS/CREATE_ASSOCIATIONS/ASSOCIATION_BY_GROUP_FETCHED\";\r\nexport const USER_SELECTED = \"USERS/CREATE_ASSOCIATIONS/USER_SELECTED\";\r\nexport const RESET_ASSOCIATIONS = \"USERS/CREATE_ASSOCIATIONS/RESET_ASSOCIATIONS\";\r\n\r\n","import { genericApiCall, API_VERBS } from \"../api/utils\";\r\n\r\nimport {\r\n  USERNAME_CHANGED,\r\n  ADD_GROUP_WITH_SINGLE_USER_CHANGED,\r\n  CREATE_USER_SUBMITTED,\r\n  CREATE_USER_FORM_RESET,\r\n  USER_LIST_FETCHED,\r\n  GROUP_NAME_CHANGED,\r\n  GROUP_NOTES_CHANGED,\r\n  GROUP_LIST_FETCHED,\r\n  ASSOCIATION_BY_GROUP_FETCHED,\r\n  GROUP_SELECTED,\r\n  USER_SELECTED,\r\n  RESET_ASSOCIATIONS,\r\n  USERS_STATE_RESET\r\n} from \"./actionTypes\";\r\n\r\nconst COMMON_PATH_PARAMS = {\r\n  id: \"{:id}\"\r\n};\r\n\r\nconst USERS_SUB_URL = \"utente\";\r\nconst GRUPPO_SUB_URL = \"gruppo\";\r\nconst ASSOCIAZIONE_SUB_URL = \"associazione-utente-gruppo\";\r\n\r\nconst GET_ALL_USERS_ENDPOINT = `${USERS_SUB_URL}/all`;\r\nconst GET_ALL_GROUPS_ENDPOIINT = `${GRUPPO_SUB_URL}/all`;\r\nconst ADD_USER_AND_GROUP_ENDPOINT = `${ASSOCIAZIONE_SUB_URL}/add-user-and-group`;\r\nconst ADD_GROUP_AND_ASSOCIATIONS_ENDPOINT = `${ASSOCIAZIONE_SUB_URL}/add-group-and-associations`;\r\nconst GET_ASSOCIATION_BY_GROUP_ENDPOINT = `${ASSOCIAZIONE_SUB_URL}/get-by-gruppo`;\r\nconst SAVE_ASSOCIATION_ENDPOINT = `${ASSOCIAZIONE_SUB_URL}/save-by-utente-gruppo`;\r\nconst DELETE_ASSOCIATION_ENDPOINT = `${ASSOCIAZIONE_SUB_URL}/${COMMON_PATH_PARAMS.id}`;\r\n\r\nexport const changeUserName = username => ({\r\n  type: USERNAME_CHANGED,\r\n  payload: { username }\r\n});\r\n\r\nexport const changeAddGroupWithSingleUser = addGroupWithSingleUser => ({\r\n  type: ADD_GROUP_WITH_SINGLE_USER_CHANGED,\r\n  payload: { addGroupWithSingleUser }\r\n});\r\n\r\nexport const submitCreateUSer = createUserResponse => ({\r\n  type: CREATE_USER_SUBMITTED,\r\n  payload: { createUserResponse }\r\n});\r\n\r\nconst fetchUserList = userList => ({\r\n  type: USER_LIST_FETCHED,\r\n  payload: { userList }\r\n});\r\n\r\nexport const changeGroupName = groupName => ({\r\n  type: GROUP_NAME_CHANGED,\r\n  payload: { groupName }\r\n});\r\n\r\nexport const changeGroupNotes = groupNotes => ({\r\n  type: GROUP_NOTES_CHANGED,\r\n  payload: { groupNotes }\r\n});\r\n\r\nexport const resetCreateUserForm = () => ({ type: CREATE_USER_FORM_RESET });\r\n\r\nexport const getAllUsers = () => dispatch => {\r\n  dispatch(\r\n    genericApiCall(API_VERBS.GET, {\r\n      endpoint: GET_ALL_USERS_ENDPOINT,\r\n      queryParams: {},\r\n      onSuccess: resp => {\r\n        dispatch(fetchUserList(resp.data));\r\n      }\r\n    })\r\n  );\r\n};\r\n\r\nexport const createUserAndGroup = (\r\n  username,\r\n  addGroupWithSingleUser\r\n) => dispatch =>\r\n  dispatch(\r\n    genericApiCall(API_VERBS.POST, {\r\n      endpoint: ADD_USER_AND_GROUP_ENDPOINT,\r\n      body: { username, addGroupWithSingleUser },\r\n      onSuccess: resp => dispatch(submitCreateUSer(resp))\r\n    })\r\n  );\r\n\r\nexport const createGroupByNameAndUSers = (\r\n  groupName,\r\n  groupNotes,\r\n  users\r\n) => dispatch =>\r\n  dispatch(\r\n    genericApiCall(API_VERBS.POST, {\r\n      endpoint: ADD_GROUP_AND_ASSOCIATIONS_ENDPOINT,\r\n      body: { groupName, groupNotes, users }\r\n    })\r\n  );\r\n\r\nexport const fetchGroupList = groupList => ({\r\n  type: GROUP_LIST_FETCHED,\r\n  payload: { groupList }\r\n});\r\n\r\nexport const fetchAssociationByGroupAction = associationByGroup => ({\r\n  type: ASSOCIATION_BY_GROUP_FETCHED,\r\n  payload: { associationByGroup }\r\n});\r\n\r\nexport const fetchAllGroups = () => dispatch =>\r\n  dispatch(\r\n    genericApiCall(API_VERBS.GET, {\r\n      endpoint: GET_ALL_GROUPS_ENDPOIINT,\r\n      queryParams: {},\r\n      onSuccess: resp => {\r\n        dispatch(fetchGroupList(resp.data));\r\n      }\r\n    })\r\n  );\r\n\r\nexport const fetchAssociationByGroup = idGruppo => dispatch =>\r\n  dispatch(\r\n    genericApiCall(API_VERBS.GET, {\r\n      endpoint: GET_ASSOCIATION_BY_GROUP_ENDPOINT,\r\n      queryParams: { idGruppo },\r\n      onSuccess: resp => {\r\n        dispatch(\r\n          fetchAssociationByGroupAction(\r\n            resp.data.map(el => ({ ...el, id: el.idAssociazioneUtenteGruppo }))\r\n          )\r\n        );\r\n      }\r\n    })\r\n  );\r\n\r\nconst saveAssociation = (idsUtente, idGruppo) => dispatch =>\r\n  dispatch(\r\n    genericApiCall(API_VERBS.POST, {\r\n      endpoint: SAVE_ASSOCIATION_ENDPOINT,\r\n      body: { idsUtente, idGruppo }\r\n    })\r\n  );\r\n\r\nexport const deleteAssociation = id => dispatch =>\r\n  dispatch(\r\n    genericApiCall(API_VERBS.DELETE, {\r\n      endpoint: DELETE_ASSOCIATION_ENDPOINT.replace(COMMON_PATH_PARAMS.id, id),\r\n      queryParams: {}\r\n    })\r\n  );\r\n\r\nexport const deleteAssociationList = (ids, idGruppo) => dispatch =>\r\n  Promise.all(ids.map(el => dispatch(deleteAssociation(el)))).then(res =>\r\n    dispatch(fetchAssociationByGroup(idGruppo))\r\n  );\r\n\r\nexport const selectGroupId = selectedGroupId => ({\r\n  type: GROUP_SELECTED,\r\n  payload: { selectedGroupId }\r\n});\r\n\r\nexport const onChangeSelectedGroup = event => dispatch => {\r\n  const idGruppo = event.target.value;\r\n  dispatch(selectGroupId(idGruppo));\r\n  dispatch(fetchAssociationByGroup(idGruppo));\r\n};\r\n\r\nexport const selectUserIds = selectedUserIds => ({\r\n  type: USER_SELECTED,\r\n  payload: { selectedUserIds }\r\n});\r\n\r\nexport const resetAssociaUtenteGruppi = () => ({ type: RESET_ASSOCIATIONS });\r\n\r\nexport const handleSaveAssociations = (idsUtente, idGruppo) => dispatch =>\r\n  dispatch(saveAssociation(idsUtente, idGruppo)).then(input =>\r\n    dispatch(fetchAssociationByGroup(idGruppo))\r\n  );\r\n\r\nexport const resetUsersState = () => ({ type: USERS_STATE_RESET });\r\n\r\nexport const commonInit = (returnAsPromiseAll) => dispatch => {\r\n  dispatch(resetUsersState());\r\n  if (returnAsPromiseAll) {\r\n    return Promise.all(dispatch(getAllUsers()), dispatch(fetchAllGroups()));\r\n  } else {\r\n    dispatch(getAllUsers());\r\n    dispatch(fetchAllGroups());\r\n  }\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const usersSlice = state => state.usersReducer;\r\n\r\nexport const getUsername = createSelector(usersSlice, state => state.username);\r\nexport const getAddGroupWithSingleUser = createSelector(\r\n  usersSlice,\r\n  state => state.addGroupWithSingleUser\r\n);\r\nexport const getCreateUserResponse = createSelector(\r\n  usersSlice,\r\n  state => state.createUserResponse\r\n);\r\n\r\nexport const getUserList = createSelector(usersSlice, state => state.userList);\r\n\r\nexport const getUserById = (id, userList) =>\r\n  userList.find(el => el.idUtente == id);\r\n\r\nexport const getGroupName = createSelector(\r\n  usersSlice,\r\n  state => state.groupName\r\n);\r\n\r\nexport const getGroupNotes = createSelector(\r\n  usersSlice,\r\n  state => state.groupNotes\r\n);\r\n\r\nexport const getGroupListRaw = createSelector(\r\n  usersSlice,\r\n  state => state.groupList\r\n);\r\n\r\nexport const getSelectedGroupId = createSelector(\r\n  usersSlice,\r\n  state => state.selectedGroupId\r\n);\r\n\r\nexport const getSelectedUserIds = createSelector(\r\n  usersSlice,\r\n  state => state.selectedUserIds\r\n);\r\n\r\nexport const getAssociationByGroup = createSelector(\r\n  usersSlice,\r\n  state => state.associationByGroup\r\n);\r\n\r\nexport const getGroupList = createSelector(getGroupListRaw, list => {\r\n  return list\r\n    ? list.map(gr => ({ ...gr, value: gr.idGruppo, text: gr.nomeGruppo }))\r\n    : [];\r\n});\r\n\r\nexport const getUtentiNonAncoraAssociati = createSelector(\r\n  getAssociationByGroup,\r\n  getUserList,\r\n  (associazioni, utenti) =>\r\n    utenti\r\n      ? utenti.filter(\r\n          ut => !associazioni.find(ass => ass.utente.idUtente === ut.idUtente)\r\n        )\r\n      : []\r\n);\r\n\r\nexport const getSelectedGroup = createSelector(\r\n  getGroupListRaw,\r\n  getSelectedGroupId,\r\n  (groups, selectedGroupId) => groups.find(gr => gr.idGruppo == selectedGroupId)\r\n);\r\n\r\nexport const getSelectedGroupName = createSelector(getSelectedGroup, group =>\r\n  group ? group.nomeGruppo : \"\"\r\n);\r\n\r\nexport const getSelectedSingleUserId = createSelector(\r\n  getSelectedUserIds,\r\n  ids => ids[0]\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport { AddUserPage } from \"./AddUserPage\";\r\nimport {\r\n  changeUserName,\r\n  changeAddGroupWithSingleUser,\r\n  resetCreateUserForm,\r\n  createUserAndGroup\r\n} from \"../../../../redux/users/actions\";\r\nimport {\r\n  getUsername,\r\n  getAddGroupWithSingleUser\r\n} from \"../../../../redux/users/selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n  username: getUsername(state),\r\n  addGroupWithSingleUser: getAddGroupWithSingleUser(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeUserName,\r\n  changeAddGroupWithSingleUser,\r\n  createUserAndGroup,\r\n  resetCreateUserForm\r\n};\r\n\r\nexport const AddUserPageContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddUserPage);\r\n","import { useState } from \"react\";\r\nimport { withChangeIconOnInit } from \"../../../common/hocs/withChangeIconOnInit\";\r\nimport { USERS_KEY } from \"../../../common/constants\";\r\nimport { GenericForm } from \"../../../common/components/form/generic-form/GenericForm\";\r\nimport { InputRow } from \"../../../common/components/form/input-row/InputRow\";\r\nimport { Input } from \"../../../common/components/form/input/Input\";\r\nimport { SinglePageTemplate } from \"../../../layout/content/single-page-template/SinglePageTemplate\";\r\n\r\nconst CreateGroupPageComponent = ({\r\n  getAllUsers,\r\n  userList,\r\n  groupName,\r\n  groupNotes,\r\n  changeGroupName,\r\n  changeGroupNotes,\r\n  createGroupByNameAndUSers\r\n}) => {\r\n  const [users, setUsers] = useState([]);\r\n \r\n  return (\r\n    <SinglePageTemplate h1LabelKey=\"GROUPS.CREATE_TITLE\" onInit={getAllUsers}>\r\n      <GenericForm\r\n        onSubmit={() => createGroupByNameAndUSers(groupName, groupNotes, users)}\r\n        disableSubmitBtn={!userList || userList.length === 0}\r\n        withClearButton={false}\r\n      >\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              labelKey=\"GROUPS.GROUP_NAME\"\r\n              name=\"GROUPS.GROUP_NAME\"\r\n              value={groupName}\r\n              onChange={event => changeGroupName(event.target.value)}\r\n              required\r\n            />\r\n          }\r\n          Component2={\r\n            <Input\r\n              type=\"multiple-select\"\r\n              labelKey=\"GROUPS.USER_LIST\"\r\n              name=\"GROUPS.USER_LIST\"\r\n              optionList={userList}\r\n              onChange={event => {\r\n                console.log(event.target);\r\n                setUsers(event.target.value);\r\n              }}\r\n              value={users}\r\n              valueOptionProp=\"idUtente\"\r\n              textOptionProp=\"username\"\r\n              required\r\n            ></Input>\r\n          }\r\n        />\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              labelKey=\"GROUPS.GROUP_NOTES\"\r\n              name=\"GROUPS.GROUP_NOTES\"\r\n              value={groupNotes}\r\n              onChange={event => changeGroupNotes(event.target.value)}\r\n            />\r\n          }\r\n        />\r\n      </GenericForm>\r\n    </SinglePageTemplate>\r\n  );\r\n};\r\n\r\nexport const CreateGroupPage = withChangeIconOnInit(USERS_KEY)(\r\n  CreateGroupPageComponent\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport { CreateGroupPage } from \"./CreateGroupPage\";\r\nimport { getAllUsers, changeGroupName, createGroupByNameAndUSers, changeGroupNotes } from \"../../../../redux/users/actions\";\r\nimport { getUserList, getGroupName, getGroupNotes } from \"../../../../redux/users/selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n    userList:getUserList(state),\r\n    groupName:getGroupName(state),\r\n    groupNotes:getGroupNotes(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getAllUsers,\r\n    changeGroupName, \r\n    changeGroupNotes,\r\n    createGroupByNameAndUSers\r\n};\r\n\r\nexport const CreateGroupPageContainer = connect(mapStateToProps,\r\n    mapDispatchToProps)(CreateGroupPage);","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { withHover } from \"../../hocs/withHover\";\r\nimport { withNamespaces } from \"react-i18next\";\r\n\r\nexport const IconWithTooltip = withNamespaces()(\r\n  ({\r\n    tootlipMessage,\r\n    t,\r\n    tooltipMessageI18nKey,\r\n    fontAwesomeIconProps,\r\n    otherTooltipDivProps,\r\n    otherTooltipSpanProps\r\n  }) => {\r\n    const message = tooltipMessageI18nKey\r\n      ? t(tooltipMessageI18nKey)\r\n      : tootlipMessage;\r\n    const FinalComponent = withHover(message, otherTooltipDivProps, otherTooltipSpanProps)(FontAwesomeIcon);\r\n    return (\r\n      <>{FinalComponent && <FinalComponent {...fontAwesomeIconProps} />}</>\r\n    );\r\n  }\r\n);\r\n\r\nIconWithTooltip.defaultProps = {\r\n  tootlipMessage: \"\",\r\n  fontAwesomeIconProps: {}\r\n};\r\n","import \"../styles/withHoverStyles.scss\";\r\n\r\nexport const withHover = (\r\n  tooltipText = \"\",\r\n  otherPropsDiv = {},\r\n  otherSpanProps = {}\r\n) => WrappedComponent => wrappedComponentProps =>{\r\n  return (\r\n    <div className=\"tooltip\" {...otherPropsDiv}>\r\n      <WrappedComponent {...wrappedComponentProps} />\r\n      <span className=\"tooltiptext\" { ...otherSpanProps }>{tooltipText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\n/* export const withHoverAdvanced = () => (WrappedComponent, ) => wrappedComponentProps =>{\r\n\r\n} */","import { DataGrid } from \"@material-ui/data-grid\";\r\n\r\n\r\nconst columns = [\r\n    { field: \"idAssociazioneUtenteGruppo\", headerName: \"Id\", width: 70 },\r\n    {\r\n      field: \"idUtente\",\r\n      valueGetter: params => params.row.utente.idUtente,\r\n      headerName: \"Id utente\",\r\n      width: 130\r\n    },\r\n    {\r\n      field: \"usernameUtente\",\r\n      valueGetter: params => params.row.utente.username,\r\n      headerName: \"Username utente\",\r\n      width: 250\r\n    },\r\n    { field: \"tmsInserimento\", headerName: \"Tms Inserimento\", width: 250 }\r\n  ];\r\n\r\nexport const AssociationsTable = ({\r\n  rows,\r\n  pageSize,\r\n  checkboxSelection,\r\n  onSelectionChange\r\n}) => {\r\n  return (\r\n    <DataGrid\r\n      rows={rows}\r\n      columns={columns}\r\n      pageSize={pageSize}\r\n      checkboxSelection={checkboxSelection}\r\n      onSelectionChange={onSelectionChange}\r\n    />\r\n  );\r\n};\r\n\r\nAssociationsTable.defaultProps = {\r\n  rows: [],\r\n  pageSize: 5,\r\n  checkboxSelection: false\r\n};\r\n","import { useState } from \"react\";\r\nimport { withChangeIconOnInit } from \"../../../common/hocs/withChangeIconOnInit\";\r\nimport { USERS_KEY } from \"../../../common/constants\";\r\nimport { SinglePageTemplate } from \"../../../layout/content/single-page-template/SinglePageTemplate\";\r\nimport { GenericForm } from \"../../../common/components/form/generic-form/GenericForm\";\r\nimport { Input } from \"../../../common/components/form/input/Input\";\r\nimport \"./ManageUsers.scss\";\r\nimport { IconWithTooltip } from \"../../../common/components/icon-with-tooltip/IconWithTooltip\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { InputRow } from \"../../../common/components/form/input-row/InputRow\";\r\nimport { Button } from \"../../../common/components/form/button/Button\";\r\nimport { AssociationsTable } from \"./associations-table/AssociationsTable\";\r\n\r\nconst ManageUsersPageComponent = ({\r\n  userList,\r\n  groupList,\r\n  associationByGroup,\r\n  commonInit,\r\n  handleSaveAssociations,\r\n  resetAssociaUtenteGruppi,\r\n  deleteAssociationList,\r\n  selectedGroupId,\r\n  onChangeSelectedGroup,\r\n  selectedUserIds,\r\n  selectUserIds\r\n}) => {\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  \r\n  return (\r\n    <SinglePageTemplate h1LabelKey=\"GROUPS.ASSOCIATE_TITLE\" onInit={commonInit}>\r\n      <GenericForm\r\n        disableSubmitBtn={!selectedUserIds || selectedUserIds.length === 0}\r\n        onClearForm={resetAssociaUtenteGruppi}\r\n        onSubmit={() => {\r\n          handleSaveAssociations(selectedUserIds, selectedGroupId);\r\n        }}\r\n      >\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              type=\"select\"\r\n              name=\"GROUPS.GROUP_LIST\"\r\n              labelKey=\"GROUPS.GROUP_LIST\"\r\n              optionList={groupList}\r\n              value={selectedGroupId}\r\n              onChange={onChangeSelectedGroup}\r\n            />\r\n          }\r\n        />\r\n\r\n        <div className=\"table-wrapper\">\r\n          <div className=\"icon-row\">\r\n            <span>\r\n              <Button\r\n                onClick={() => {\r\n                  deleteAssociationList(selectedRows, selectedGroupId);\r\n                }}\r\n                width=\"100px\"\r\n              >\r\n                <IconWithTooltip\r\n                  fontAwesomeIconProps={{ icon: faTrash, size: \"lg\" }}\r\n                  tooltipMessageI18nKey=\"GROUPS.DELETE_SELECTIONS\"\r\n                />\r\n              </Button>\r\n            </span>\r\n          </div>\r\n          <AssociationsTable \r\n            rows={associationByGroup}\r\n            checkboxSelection\r\n            onSelectionChange={event => setSelectedRows(event.rowIds)}\r\n          />\r\n        </div>\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              type=\"multiple-select\"\r\n              name=\"GROUPS.USER_LIST\"\r\n              labelKey=\"GROUPS.USER_LIST\"\r\n              valueOptionProp=\"idUtente\"\r\n              textOptionProp=\"username\"\r\n              optionList={userList}\r\n              value={selectedUserIds}\r\n              onChange={event => selectUserIds(event.target.value)}\r\n            />\r\n          }\r\n        />\r\n      </GenericForm>\r\n    </SinglePageTemplate>\r\n  );\r\n};\r\n\r\nexport const ManageUsersPage = withChangeIconOnInit(USERS_KEY)(\r\n  ManageUsersPageComponent\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport { ManageUsersPage } from \"./ManageUsersPage\";\r\nimport {\r\n  commonInit,\r\n  fetchAssociationByGroup,\r\n  handleSaveAssociations,\r\n  deleteAssociationList,\r\n  onChangeSelectedGroup,\r\n  selectUserIds,\r\n  resetAssociaUtenteGruppi\r\n} from \"../../../../redux/users/actions\";\r\nimport {\r\n  getGroupList,\r\n  getAssociationByGroup,\r\n  getSelectedGroupId,\r\n  getSelectedUserIds,\r\n  getUtentiNonAncoraAssociati\r\n} from \"../../../../redux/users/selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n  userList: getUtentiNonAncoraAssociati(state),\r\n  groupList: getGroupList(state),\r\n  associationByGroup: getAssociationByGroup(state),\r\n  selectedGroupId: getSelectedGroupId(state),\r\n  selectedUserIds: getSelectedUserIds(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  commonInit,\r\n  fetchAssociationByGroup,\r\n  handleSaveAssociations,\r\n  deleteAssociationList,\r\n  onChangeSelectedGroup,\r\n  selectUserIds,\r\n  resetAssociaUtenteGruppi\r\n};\r\n\r\nexport const ManageUsersPageContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManageUsersPage);\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Modal, Backdrop, Fade } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3)\r\n  }\r\n}));\r\n\r\nexport const GenericModal = ({ externalOpen, isOpen, onClose, timeoutOnInit, children }) => {\r\n  const classes = useStyles();\r\n  const [stateOpen, setOpen] = useState(false);\r\n  const open = externalOpen ? isOpen : stateOpen;\r\n  useEffect(() => {\r\n    if (!externalOpen) {\r\n      setTimeout(() => setOpen(true), timeoutOnInit || 0);\r\n    }\r\n  }, [timeoutOnInit]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    onClose && onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className={classes.modal}\r\n      open={open}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500\r\n      }}\r\n    >\r\n      <Fade in={open}>\r\n        <div className={classes.paper}>\r\n            {children}\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nGenericModal.defaultProps = {\r\n    externalOpen:false, \r\n    isOpen:false, \r\n    timeoutOnInit:0,\r\n    onClose:null\r\n}","import { GenericModal } from \"../../../../common/components/generic-modal/GenericModal\";\r\nimport { AssociationsTable } from \"../../../users/manage-users/associations-table/AssociationsTable\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport \"./AssociationsModal.scss\";\r\n\r\nexport const AssociationsModal = withNamespaces()(\r\n  ({ associationList, groupName, isOpen, onClose, t }) => {\r\n    return (\r\n      <GenericModal externalOpen isOpen={isOpen} onClose={onClose}>\r\n        <h1 className=\"heading\">{t(\"PAYMENTS.ASSOCIATIONS_MODAL_TITLE\")}</h1>\r\n        <h5>{t(\"PAYMENTS.SELECTED_GROUP\")}{groupName}</h5>\r\n        <div className=\"association-table-wrapper\">\r\n          <AssociationsTable rows={associationList} />\r\n        </div>\r\n      </GenericModal>\r\n    );\r\n  }\r\n);\r\n","import { faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Input } from \"../../../../common/components/form/input/Input\";\r\nimport { IconWithTooltip } from \"../../../../common/components/icon-with-tooltip/IconWithTooltip\";\r\nimport { AssociationsModal } from \"../associations-modal/AssociationsModal\";\r\nimport \"./GroupListSelect.scss\";\r\n\r\nexport const GroupListSelect = ({\r\n  groupList,\r\n  selectedGroupId,\r\n  selectGroupId,\r\n  selectedGroupName,\r\n  associationList,\r\n  isAssociationsModalOpen,\r\n  onOpenAssociationListModal,\r\n  closeAssociationsModal\r\n}) => {\r\n  const isIconEnabled = groupList.length > 0 && !!selectedGroupId;\r\n  const iconWrapperClass = `${isIconEnabled ? \"\" : \"disabled \"}icon-wrapper`;\r\n  return (\r\n    <>\r\n      <div className=\"group-list-select-wrapper\">\r\n        <div className=\"input-wrapper\">\r\n          <Input\r\n            type=\"select\"\r\n            valueOptionProp=\"idGruppo\"\r\n            textOptionProp=\"nomeGruppo\"\r\n            optionList={groupList}\r\n            name=\"GROUPS.GROUP_LIST\"\r\n            labelKey=\"PAYMENTS.PARTECIPATION_GROUP\"\r\n            value={selectedGroupId}\r\n            onChange={event => selectGroupId(event.target.value)}\r\n          />\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            isIconEnabled && onOpenAssociationListModal(selectedGroupId);\r\n          }}\r\n          className={iconWrapperClass}\r\n        >\r\n          <IconWithTooltip\r\n            tooltipMessageI18nKey=\"PAYMENTS.OPEN_ASSOCIATIONS_MODAL\"\r\n            fontAwesomeIconProps={{ icon: faLink }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <AssociationsModal\r\n        associationList={associationList}\r\n        groupName={selectedGroupName}\r\n        isOpen={isAssociationsModalOpen}\r\n        onClose={closeAssociationsModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","export const isFalsyExceptZero = input => (input === 0 ? false : !input);\r\n\r\nexport const formatTmsToDateDDMMYYYY = tms => {\r\n    if(tms){\r\n        const parts = tms.split(\"T\");\r\n        const parts2 = parts[0].split(\"-\");\r\n        return `${parts2[2]}/${parts2[1]}/${parts2[0]}`\r\n    }\r\n}","import { withNamespaces } from \"react-i18next\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport { Input } from \"../../../common/components/form/input/Input\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./PaymentsTable.scss\";\r\nimport { isFalsyExceptZero } from \"../../../../redux/common/utils\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst CheckboxCell = ({ checked, onChange, hideCheckbox }) => (\r\n  <TableCell padding=\"checkbox\">\r\n    {!hideCheckbox && <Input type=\"checkbox\" checked={checked} onChange={onChange} />}\r\n  </TableCell>\r\n);\r\n\r\nconst handleValueGetter = (payObj, valueGetter, componentRender) => {\r\n  if (componentRender) {\r\n    return componentRender({ payObj, valueGetter });\r\n  } else if (isFalsyExceptZero(payObj)) {\r\n    return \"\";\r\n  } else if (valueGetter) {\r\n    return valueGetter(payObj);\r\n  } else {\r\n    return payObj;\r\n  }\r\n};\r\n\r\n/**\r\n * \r\n * inquiryDataStructure = true -> \r\n *  -> payments = [{\r\n        categoriaSpesa: { idCategoriaSpesa: 1, nomeCategoria: \"ALIMENTARI\" },\r\n        descrizione: null,\r\n        flgPagato: false,\r\n        gruppoPartecipante: {\r\n          idGruppo: 1,\r\n          nomeGruppo: \"SmartPausing\",\r\n          noteGruppo: \"Tanto paga sempre Calò\"\r\n        },\r\n        idPagamento: 2,\r\n        importo: 20.5,\r\n        tmsInserimento: \"2020-12-23T14:13:01.675+00:00\",\r\n        tmsModifica: null,\r\n        ...\r\n      }]\r\n * \r\n *  inquiryDataStructure = false -> \r\n *    -> payments = [{\r\n      categoriaSpesa: { value: \"1\" },\r\n      descrizione: { value: \"asad\" },\r\n      flgPagato: { value: true },\r\n      gruppoPartecipante: { value: \"1\" },\r\n      idPagamento: { value: \"1\" },\r\n      importo: { value: 12 },\r\n      ...\r\n    }]\r\n * \r\n * \r\n */\r\n\r\nexport const PaymentsTable = withNamespaces()(\r\n  ({\r\n    dataColumns,\r\n    actionColumns,\r\n    payments,\r\n    handleInputChange,\r\n    inquiryDataStructure,\r\n    withCheckboxColumn,\r\n    onChangeSelection,\r\n    isUnselectable,\r\n    t\r\n  }) => {\r\n    if (!payments) {\r\n      return <></>;\r\n    }\r\n\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n    const [unselectableRows, setUnselectableRows] = useState([]);\r\n\r\n    useEffect(() => {\r\n      setUnselectableRows(payments.filter(pay => isUnselectable(pay)).map(pay => pay.idPagamento));\r\n    }, [payments]);\r\n\r\n    function changeSelectionSingle(index) {\r\n      const add = isFalsyExceptZero(selectedRows.find(el => el === index));\r\n      let newRows = [];\r\n      if (add) {\r\n        newRows = selectedRows.concat([index]);\r\n      } else {\r\n        newRows = selectedRows.filter(el => el !== index);\r\n      }\r\n      setSelectedRows(newRows);\r\n\r\n      onChangeSelection && onChangeSelection(newRows);\r\n    }\r\n    function isHeadCheckboxSelected() {\r\n      return selectedRows.length === payments.length - unselectableRows.length;\r\n    }\r\n    function changeSelectionAll() {\r\n      let newRows = [];\r\n      if (!isHeadCheckboxSelected()) {\r\n        //select all\r\n        newRows = payments.map(el => el.idPagamento);\r\n      }\r\n      setSelectedRows(newRows);\r\n      onChangeSelection && onChangeSelection(newRows);\r\n    }\r\n\r\n    return (\r\n      <Table className=\"payment-table\">\r\n        <TableHead className=\"payment-table-head\">\r\n          <TableRow>\r\n            {withCheckboxColumn && (\r\n              <CheckboxCell\r\n                checked={isHeadCheckboxSelected()}\r\n                onChange={changeSelectionAll}\r\n              />\r\n            )}\r\n            {dataColumns.map(col => (\r\n              <TableCell\r\n                key={col.paymentKey}\r\n                className=\"test-class-name\"\r\n                {...col.additionalHeadCellProps}\r\n              >\r\n                {t(col.headerLabelKey)}\r\n              </TableCell>\r\n            ))}\r\n            {actionColumns.map(action => (\r\n              <TableCell\r\n                key={action.actionKey}\r\n                className=\"test-class-name\"\r\n                {...action.additionalHeadCellProps}\r\n              >\r\n                {t(action.headerLabelKey)}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {payments.map((pay, index) => {\r\n            const { idPagamento } = pay;\r\n            const isSelected = selectedRows.includes(idPagamento);\r\n            return (\r\n              <TableRow\r\n                key={idPagamento || `PaymentsTableRow_${index}`}\r\n                className={`${isSelected ? \"selected\" : \"\"}`}\r\n              >\r\n                {withCheckboxColumn && (\r\n                    <CheckboxCell\r\n                      checked={isSelected}\r\n                      hideCheckbox = {unselectableRows.includes(idPagamento)}\r\n                      onChange={() => changeSelectionSingle(idPagamento)}\r\n                    />\r\n                  )}\r\n                {dataColumns.map(col => {\r\n                  const {\r\n                    paymentKey,\r\n                    valueGetter,\r\n                    componentRender,\r\n                    inputType,\r\n                    optionList,\r\n                    valueOptionProp,\r\n                    textOptionProp\r\n                  } = col;\r\n                  const payObj = pay[paymentKey];\r\n                  if (payObj === null || payObj === undefined) {\r\n                    return <TableCell></TableCell>;\r\n                  }\r\n\r\n                  return (\r\n                    <TableCell {...col.additionalCellProps}>\r\n                      {inquiryDataStructure ? (\r\n                        handleValueGetter(payObj, valueGetter, componentRender)\r\n                      ) : (\r\n                        <Input\r\n                          type={inputType}\r\n                          value={payObj.value}\r\n                          optionList={optionList}\r\n                          valueOptionProp={valueOptionProp}\r\n                          textOptionProp={textOptionProp}\r\n                          onChange={event =>\r\n                            handleInputChange(\r\n                              index,\r\n                              paymentKey,\r\n                              event.target.value\r\n                            )\r\n                          }\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n                {actionColumns.map(action => {\r\n                  const { iconName, handleClick } = action;\r\n                  return (\r\n                    <TableCell\r\n                      {...action.additionalCellProps}\r\n                      className={`icon-settings ${action.additionalClassname}`}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        icon={iconName}\r\n                        size=\"2x\"\r\n                        onClick={() => handleClick(index)}\r\n                      />\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  }\r\n);\r\n\r\nPaymentsTable.defaultProps = {\r\n  dataColumns: [],\r\n  actionColumns: [],\r\n  payments: [],\r\n  isUnselectable: payment => false //by default all is selectable\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { withChangeIconOnInit } from \"../../../common/hocs/withChangeIconOnInit\";\r\nimport { PAYMENTS_KEY } from \"../../../common/constants\";\r\nimport { SinglePageTemplate } from \"../../../layout/content/single-page-template/SinglePageTemplate\";\r\nimport { GenericForm } from \"../../../common/components/form/generic-form/GenericForm\";\r\nimport { InputRow } from \"../../../common/components/form/input-row/InputRow\";\r\nimport { Input } from \"../../../common/components/form/input/Input\";\r\nimport { GroupListSelect } from \"./group-list-select/GroupListSelect\";\r\nimport { PaymentsTable } from \"../payments-table/PaymentsTable\";\r\nimport { faClone, faEraser, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./AddPaymentPage.scss\";\r\nimport { IconWithTooltip } from \"../../../common/components/icon-with-tooltip/IconWithTooltip\";\r\n\r\nconst staticActionColumns = [\r\n  {\r\n    actionKey: \"cloneRow\",\r\n    headerLabelKey: \"PAYMENTS.CLONE_ROW\",\r\n    iconName: faClone,\r\n    additionalClassname: \"theme-color\",\r\n    additionalCellProps: { align: \"center\" },\r\n    additionalHeadCellProps: { align: \"center\" }\r\n  },\r\n  {\r\n    actionKey: \"deleteRow\",\r\n    headerLabelKey: \"PAYMENTS.DELETE_ROW\",\r\n    iconName: faEraser,\r\n    additionalClassname: \"make-red\",\r\n    additionalCellProps: { align: \"center\" },\r\n    additionalHeadCellProps: { align: \"center\" }\r\n  }\r\n];\r\n\r\nconst AddPaymentPageComponent = ({\r\n  init,\r\n  resetAddPayments,\r\n  userList,\r\n  groupList,\r\n  selectedUserId,\r\n  selectUserIds,\r\n  selectedGroupId,\r\n  selectedGroupName,\r\n  selectGroupId,\r\n  associationsByGroup,\r\n  isAssociationsModalOpen,\r\n  onOpenAssociationListModal,\r\n  closeAssociationsModal,\r\n  payments,\r\n  dataColumns,\r\n  addPaymentRow,\r\n  deletePaymentRow,\r\n  clonePaymentRow,\r\n  changePaymentInput,\r\n  disabledForm,\r\n  handleSubmitInputPayments\r\n}) => {\r\n  const [actionColumns, setActionColumns] = useState(staticActionColumns);\r\n\r\n  useEffect(() => {\r\n    setActionColumns(\r\n      staticActionColumns.map(el => ({\r\n        ...el,\r\n        handleClick: index => {\r\n          if (el.actionKey === \"cloneRow\") {\r\n            return clonePaymentRow(index);\r\n          } else {\r\n            return deletePaymentRow(index);\r\n          }\r\n        }\r\n      }))\r\n    );\r\n  }, [payments]);\r\n\r\n  return (\r\n    <SinglePageTemplate onInit={init} h1LabelKey={\"PAYMENTS.TITLE\"}>\r\n      <GenericForm\r\n        onClearForm={resetAddPayments}\r\n        disableSubmitBtn={disabledForm}\r\n        onSubmit={() => {\r\n          handleSubmitInputPayments(selectedUserId, selectedGroupId, payments);\r\n        }}\r\n      >\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              type=\"select\"\r\n              name=\"GROUPS.USER_LIST\"\r\n              labelKey=\"PAYMENTS.PAY_USER\"\r\n              optionList={userList}\r\n              value={selectedUserId}\r\n              onChange={event => selectUserIds([event.target.value])}\r\n              valueOptionProp=\"idUtente\"\r\n              textOptionProp=\"username\"\r\n            />\r\n          }\r\n          Component2={\r\n            <GroupListSelect\r\n              groupList={groupList}\r\n              selectedGroupId={selectedGroupId}\r\n              selectGroupId={selectGroupId}\r\n              selectedGroupName={selectedGroupName}\r\n              associationList={associationsByGroup}\r\n              isAssociationsModalOpen={isAssociationsModalOpen}\r\n              onOpenAssociationListModal={onOpenAssociationListModal}\r\n              closeAssociationsModal={closeAssociationsModal}\r\n            />\r\n          }\r\n        />\r\n        <div className=\"table-wrapper\">\r\n          <PaymentsTable\r\n            dataColumns={dataColumns}\r\n            actionColumns={actionColumns}\r\n            payments={payments}\r\n            handleInputChange={changePaymentInput}\r\n          />\r\n        </div>\r\n        <div className=\"add-icon-wrapper\">\r\n          <span>\r\n            <IconWithTooltip\r\n              tooltipMessageI18nKey=\"PAYMENTS.ADD_ROW\"\r\n              fontAwesomeIconProps={{\r\n                icon: faPlus,\r\n                size: \"3x\",\r\n                onClick: addPaymentRow\r\n              }}\r\n            />\r\n          </span>\r\n        </div>\r\n      </GenericForm>\r\n    </SinglePageTemplate>\r\n  );\r\n};\r\n\r\nexport const AddPaymentPage = withChangeIconOnInit(PAYMENTS_KEY)(\r\n  AddPaymentPageComponent\r\n);\r\n","export const PAYMENTS_STATE_RESET = \"PAYMENTS/PAYMENTS_STATE_RESET\";\r\n\r\n//ADD PAYMENTS\r\nexport const ASSOCIATIONS_MODAL_OPENED = \"ADD_PAYMENTS/ASSOCIATIONS_MODAL_OPENED\";\r\nexport const ASSOCIATIONS_MODAL_CLOSED = \"ADD_PAYMENTS/ASSOCIATIONS_MODAL_CLOSED\";\r\nexport const INPUT_PAYMENT_ROW_ADDED = \"ADD_PAYMENTS/INPUT_PAYMENT_ROW_ADDED\";\r\nexport const INPUT_PAYMENT_ROW_DELETED = \"ADD_PAYMENTS/INPUT_PAYMENT_ROW_DELETED\";\r\nexport const INPUT_PAYMENT_ROW_CLONED = \"ADD_PAYMENTS/INPUT_PAYMENT_ROW_CLONED\";\r\nexport const INPUT_PAYMENT_CHANGED = \"ADD_PAYMENTS/INPUT_PAYMENT_CHANGED\";\r\nexport const INPUT_PAYMENT_SUBMITTED = \"ADD_PAYMENTS/INPUT_PAYMENT_SUBMITTED\";\r\nexport const ADD_PAYMENTS_RESET = \"ADD_PAYMENTS/RESET\";\r\n\r\n//REPORTS\r\nexport const FETCH_PAYMENTS_BY_FILTERS_STARTED = \"REPORTS/FETCH_PAYMENTS_BY_FILTERS_STARTED\";\r\nexport const PAYMENTS_BY_FILTERS_FETCHED = \"REPORTS/PAYMENTS_BY_FILTERS_FETCHED\";\r\nexport const DIFF_REPORT_FETCHED = \"REPORTS/DIFF_REPORT_FETCHED\";\r\nexport const AGGREGATE_REPORT_FETCHED = \"REPORTS/AGGREGATE_REPORT_FETCHED\";\r\n//export const PAYMENTS_PAID = \"REPORTS/PAYMENTS_PAID\";\r\n","export const SPENDING_CATEGORIES_FETCHED = \"CATEGORIES/SPENDING_CATEGORIES_FETCHED\";\r\nexport const SPENDING_CATEGORY_SELECTED = \"CATEGORIES/SPENDING_CATEGORY_SELECTED\";\r\nexport const SPENDING_CATEGORY_NAME_CHANGED = \"CATEGORIES/SPENDING_CATEGORY_NAME_CHANGED\";\r\nexport const SPENDING_CATEGORY_NOTES_CHANGED = \"CATEGORIES/SPENDING_CATEGORY_NOTES_CHANGED\";","import { genericApiCall, API_VERBS } from \"../api/utils\";\r\nimport {\r\n  SPENDING_CATEGORIES_FETCHED,\r\n  SPENDING_CATEGORY_SELECTED,\r\n  SPENDING_CATEGORY_NAME_CHANGED,\r\n  SPENDING_CATEGORY_NOTES_CHANGED\r\n} from \"./actionTypes\";\r\n\r\nconst CONTROLLER_SUB_URL = \"categoria-spesa\";\r\n\r\nconst FETCH_ALL_URL = `${CONTROLLER_SUB_URL}/all`;\r\nconst ADD_CATEGORY_URL = `${CONTROLLER_SUB_URL}/save`;\r\n\r\nconst fetchSpendingCategories = categoryList => ({\r\n  type: SPENDING_CATEGORIES_FETCHED,\r\n  payload: { categoryList }\r\n});\r\n\r\nexport const selectSpendingCategory = selectedCategoryId => ({\r\n  type: SPENDING_CATEGORY_SELECTED,\r\n  payload: { selectedCategoryId }\r\n});\r\n\r\nexport const changeSpendingCategoryName = nomeCategoria => ({\r\n  type: SPENDING_CATEGORY_NAME_CHANGED,\r\n  payload: { nomeCategoria }\r\n});\r\n\r\nexport const changeSpendingCategoryNotes = noteCategoria => ({\r\n  type: SPENDING_CATEGORY_NOTES_CHANGED,\r\n  payload: { noteCategoria }\r\n});\r\n\r\nexport const fetchAllSpendingCategories = () => dispatch =>\r\n  dispatch(\r\n    genericApiCall(API_VERBS.GET, {\r\n      endpoint: FETCH_ALL_URL,\r\n      onSuccess: res =>\r\n        dispatch(\r\n          fetchSpendingCategories(\r\n            res.data.map(el => ({ ...el, id: el.idCategoriaSpesa }))\r\n          )\r\n        )\r\n    })\r\n  );\r\n\r\nexport const insertSpendingCategory = (\r\n  nomeCategoria,\r\n  noteCategoria\r\n) => dispatch =>\r\n  dispatch(\r\n    genericApiCall(API_VERBS.POST, {\r\n      endpoint: ADD_CATEGORY_URL,\r\n      body: { nomeCategoria, noteCategoria }\r\n    })\r\n  );\r\n","import {\r\n  ASSOCIATIONS_MODAL_OPENED,\r\n  ASSOCIATIONS_MODAL_CLOSED,\r\n  INPUT_PAYMENT_ROW_ADDED,\r\n  INPUT_PAYMENT_ROW_DELETED,\r\n  INPUT_PAYMENT_ROW_CLONED,\r\n  INPUT_PAYMENT_CHANGED,\r\n  ADD_PAYMENTS_RESET,\r\n  INPUT_PAYMENT_SUBMITTED,\r\n  PAYMENTS_BY_FILTERS_FETCHED,\r\n  PAYMENTS_STATE_RESET,\r\n  FETCH_PAYMENTS_BY_FILTERS_STARTED,\r\n  DIFF_REPORT_FETCHED,\r\n  AGGREGATE_REPORT_FETCHED\r\n} from \"./actionTypes\";\r\nimport { fetchAssociationByGroup, commonInit } from \"../users/actions\";\r\nimport { fetchAllSpendingCategories } from \"../spending-categories/actions\";\r\nimport { API_VERBS, genericApiCall, COMMON_READ_SETTINGS } from \"../api/utils\";\r\n\r\nconst PAYMENT_CONTROLLER_SUB_URL = \"pagamento\";\r\nconst MASSIVE_SAVE_PAYMENT_URL = `${PAYMENT_CONTROLLER_SUB_URL}/massive-save-by-ids`;\r\nconst FETCH_PAYMENTS_WITH_FILTERS_URL = `${PAYMENT_CONTROLLER_SUB_URL}/by-filters`;\r\nconst PAYMENTS_MASSIVE_UPDATE_URL = `${PAYMENT_CONTROLLER_SUB_URL}/massive-update`;\r\nconst REPORTS_DIFF_BY_USERS_URL = `${PAYMENT_CONTROLLER_SUB_URL}/get-tot-avere-by-utenti-list`;\r\nconst REPORTS_AGGREGATE_BY_USERS_URL = `${PAYMENT_CONTROLLER_SUB_URL}/get-tot-avere-aggregate`;\r\n\r\nconst openAssociationModal = () => ({ type: ASSOCIATIONS_MODAL_OPENED });\r\n\r\nexport const onOpenAssociationListModal = idGruppo => dispatch => {\r\n  dispatch(fetchAssociationByGroup(idGruppo)).then(res =>\r\n    dispatch(openAssociationModal())\r\n  );\r\n};\r\n\r\nexport const closeAssociationsModal = () => ({\r\n  type: ASSOCIATIONS_MODAL_CLOSED\r\n});\r\n\r\nexport const addPaymentRow = () => ({ type: INPUT_PAYMENT_ROW_ADDED });\r\n\r\nexport const deletePaymentRow = paymentIndex => ({\r\n  type: INPUT_PAYMENT_ROW_DELETED,\r\n  payload: { paymentIndex }\r\n});\r\n\r\nexport const clonePaymentRow = paymentIndex => ({\r\n  type: INPUT_PAYMENT_ROW_CLONED,\r\n  payload: { paymentIndex }\r\n});\r\n\r\nexport const changePaymentInput = (paymentIndex, paymentKey, value) => ({\r\n  type: INPUT_PAYMENT_CHANGED,\r\n  payload: { paymentIndex, paymentKey, value }\r\n});\r\n\r\nexport const resetPaymentsState = () => ({ type: PAYMENTS_STATE_RESET });\r\n\r\nexport const init = () => dispatch => {\r\n  dispatch(commonInit());\r\n  dispatch(resetPaymentsState());\r\n  dispatch(fetchAllSpendingCategories());\r\n};\r\n\r\nexport const resetAddPayments = () => ({ type: ADD_PAYMENTS_RESET });\r\n\r\nconst submitInputPayments = massiveSaveResponse => ({\r\n  type: INPUT_PAYMENT_SUBMITTED,\r\n  payload: { massiveSaveResponse }\r\n});\r\n\r\nexport const handleSubmitInputPayments = (\r\n  idUtentePagante,\r\n  idGruppoPartecipante,\r\n  rawPayments\r\n) => dispatch => {\r\n  const payments = rawPayments.map(pay =>\r\n    Object.entries(pay).reduce(\r\n      (acc, current) => ({ ...acc, [current[0]]: current[1].value }),\r\n      {}\r\n    )\r\n  );\r\n  return dispatch(\r\n    genericApiCall(API_VERBS.POST, {\r\n      endpoint: MASSIVE_SAVE_PAYMENT_URL,\r\n      body: {\r\n        idUtentePagante,\r\n        idGruppoPartecipante,\r\n        payments\r\n      },\r\n      onSuccess: resp => dispatch(submitInputPayments(resp))\r\n    })\r\n  );\r\n};\r\n\r\nconst fetchPaymentsByFilterAction = fetchByFiltersResponse => ({\r\n  type: PAYMENTS_BY_FILTERS_FETCHED,\r\n  payload: { fetchByFiltersResponse }\r\n});\r\n\r\nconst startFetchPaymentsByFilter = fetchByFiltersRequest => ({\r\n  type: FETCH_PAYMENTS_BY_FILTERS_STARTED,\r\n  payload: { fetchByFiltersRequest }\r\n});\r\n\r\nconst fetchPaymentsByFiltersFromBody = body => dispatch => {\r\n  dispatch(startFetchPaymentsByFilter(body));\r\n\r\n  return dispatch(\r\n    genericApiCall(\r\n      API_VERBS.POST,\r\n      {\r\n        endpoint: FETCH_PAYMENTS_WITH_FILTERS_URL,\r\n        body,\r\n        onSuccess: resp => {\r\n          dispatch(fetchPaymentsByFilterAction(resp.data));\r\n        }\r\n      },\r\n      COMMON_READ_SETTINGS\r\n    )\r\n  );\r\n};\r\n\r\nexport const fetchPaymentsByFilters = rawBody => dispatch => {\r\n  const body = Object.entries(rawBody)\r\n    .filter(entry => ![\"\", null, undefined].includes(entry[1]))\r\n    .reduce((acc, current) => ({ ...acc, [current[0]]: current[1] }), {});\r\n\r\n  return dispatch(fetchPaymentsByFiltersFromBody(body));\r\n};\r\n\r\nexport const markPaymentsAsPaid = (\r\n  paymentIds,\r\n  lastFetchRequest\r\n) => dispatch => {\r\n  const list = paymentIds.map(id => ({\r\n    idPagamento: id,\r\n    flgPagato: true\r\n  }));\r\n  return dispatch(\r\n    genericApiCall(API_VERBS.PUT, {\r\n      endpoint: PAYMENTS_MASSIVE_UPDATE_URL,\r\n      body: { list },\r\n      onSuccess: resp => {\r\n        dispatch(fetchPaymentsByFiltersFromBody(lastFetchRequest));\r\n      }\r\n    })\r\n  );\r\n};\r\n\r\nconst getReportDiffByUsersAction = diffReportResponse => ({\r\n  type: DIFF_REPORT_FETCHED,\r\n  payload: { diffReportResponse }\r\n});\r\nconst getReportAggregateByUserAction = aggregateReportResponse => ({\r\n  type: AGGREGATE_REPORT_FETCHED,\r\n  payload: { aggregateReportResponse }\r\n});\r\n\r\nexport const getReportDiffByUsers = idList => dispatch => {\r\n  return dispatch(\r\n    genericApiCall(\r\n      API_VERBS.POST,\r\n      {\r\n        endpoint: REPORTS_DIFF_BY_USERS_URL,\r\n        body: { idList },\r\n        onSuccess: resp => {\r\n          dispatch(getReportDiffByUsersAction(resp.data));\r\n        }\r\n      },\r\n      COMMON_READ_SETTINGS\r\n    )\r\n  );\r\n};\r\n\r\nexport const getReportAggregateByUser = idList => dispatch => {\r\n  return dispatch(\r\n    genericApiCall(\r\n      API_VERBS.POST,\r\n      {\r\n        endpoint: REPORTS_AGGREGATE_BY_USERS_URL,\r\n        body: { idList },\r\n        onSuccess: resp => {\r\n          dispatch(getReportAggregateByUserAction(resp.data));\r\n        }\r\n      },\r\n      COMMON_READ_SETTINGS\r\n    )\r\n  );\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst spendingCategorySlice = state => state.spendingCategoriesReducer;\r\n\r\nexport const getCategoryList = createSelector(\r\n  spendingCategorySlice,\r\n  state => state.categoryList\r\n);\r\nexport const getSelectedCategoryId = createSelector(\r\n  spendingCategorySlice,\r\n  state => state.selectedCategoryId\r\n);\r\nexport const getNomeCategoria = createSelector(\r\n  spendingCategorySlice,\r\n  state => state.nomeCategoria\r\n);\r\nexport const getNoteCategoria = createSelector(\r\n  spendingCategorySlice,\r\n  state => state.noteCategoria\r\n);\r\n","import { createSelector } from \"reselect\";\r\nimport { isFalsyExceptZero } from \"../common/utils\";\r\nimport { getCategoryList } from \"../spending-categories/selectors\";\r\nimport {\r\n  getSelectedGroupId,\r\n  getSelectedSingleUserId,\r\n  getUserList,\r\n  getUserById\r\n} from \"../users/selectors\";\r\n\r\nconst paymentsSlice = state => state.paymentsReducer;\r\n\r\nexport const isAssociationsModalOpen = createSelector(\r\n  paymentsSlice,\r\n  state => state.associationModalOpen\r\n);\r\n\r\nexport const getInputPayments = createSelector(\r\n  paymentsSlice,\r\n  state => state.inputPayments\r\n);\r\n\r\nexport const getFetchByFiltersRequest = createSelector(\r\n  paymentsSlice,\r\n  state => state.fetchByFiltersRequest\r\n);\r\n\r\nexport const getFetchByFiltersResponse = createSelector(\r\n  paymentsSlice,\r\n  state => state.fetchByFiltersResponse\r\n);\r\n\r\nexport const getDiffReportResponse = createSelector(\r\n  paymentsSlice,\r\n  state => state.diffReportResponse\r\n);\r\n\r\nexport const getAggregateReportResponse = createSelector(\r\n  paymentsSlice,\r\n  state => state.aggregateReportResponse\r\n);\r\n\r\nexport const getByFiltersList = createSelector(\r\n  getFetchByFiltersResponse,\r\n  response => response && response.list\r\n);\r\n\r\nexport const listFetchedAtLeastOnce = createSelector(\r\n  getByFiltersList,\r\n  list => !!list\r\n);\r\n\r\nexport const aggregateAmountByFiltyers = createSelector(\r\n  listFetchedAtLeastOnce,\r\n  getByFiltersList,\r\n  (fetched, list) =>\r\n    fetched && list.reduce((total, current) => total + current.importo, 0)\r\n);\r\n\r\nexport const getDataColumns = createSelector(getCategoryList, categoryList => {\r\n  return [\r\n    {\r\n      paymentKey: \"descrizione\",\r\n      headerLabelKey: \"PAYMENTS.DESCRIPTION\",\r\n      inputType: \"text\",\r\n      additionalCellProps: {}\r\n    },\r\n    {\r\n      paymentKey: \"idCategoriaSpesa\",\r\n      headerLabelKey: \"PAYMENTS.INPUT_CATEGORY\",\r\n      inputType: \"select\",\r\n      optionList: categoryList,\r\n      valueOptionProp: \"idCategoriaSpesa\",\r\n      textOptionProp: \"nomeCategoria\",\r\n      additionalCellProps: {}\r\n    },\r\n    {\r\n      paymentKey: \"importo\",\r\n      headerLabelKey: \"PAYMENTS.INPUT_AMOUNT\",\r\n      inputType: \"number\",\r\n      additionalCellProps: {}\r\n    }\r\n  ];\r\n});\r\n\r\nexport const getDisabledAddPaymentsForm = createSelector(\r\n  getSelectedSingleUserId,\r\n  getSelectedGroupId,\r\n  getInputPayments,\r\n  (selectedUserId, selectedGroupId, inputPayments) => {\r\n    return (\r\n      isFalsyExceptZero(selectedUserId) ||\r\n      isFalsyExceptZero(selectedGroupId) ||\r\n      !inputPayments ||\r\n      inputPayments.length === 0 ||\r\n      inputPayments.some(payment => {\r\n        const vals = Object.values(payment);\r\n        return vals.some(payObj => isFalsyExceptZero(payObj.value));\r\n      })\r\n    );\r\n  }\r\n);\r\n\r\nexport const getDataStructureForDiffReport = createSelector(\r\n  getUserList,\r\n  getDiffReportResponse,\r\n  (userList, diffResponse) => {\r\n    if (diffResponse \r\n      && userList && userList.length > 0) {\r\n      return diffResponse.map(diff => {\r\n        const { utente1, utente2, getTotAvereDto } = diff;\r\n        const userObj1 = getUserById(utente1, userList);\r\n        const userObj2 = getUserById(utente2, userList);\r\n        return {\r\n          leftArrowUser: userObj2.username,\r\n          rightArrowUser: userObj1.username,\r\n          amount: getTotAvereDto.totAvere || 0\r\n        };\r\n      });\r\n    }\r\n    return [];\r\n  }\r\n);\r\n\r\nconst CONSTANTS = {\r\n  MINNICU_THRESHOLD: 10\r\n};\r\n\r\n\r\nexport const getDataStructureForAggregateReport = createSelector(\r\n  getUserList,\r\n  getAggregateReportResponse,\r\n  (userList, aggregateReponse) => {\r\n    if (aggregateReponse \r\n      && userList && userList.length > 0) {\r\n      return Object.entries(aggregateReponse).map(currentEntry => {\r\n        const userId = currentEntry[0];\r\n        const amount = currentEntry[1] || 0;\r\n        const userObj = getUserById(userId, userList);\r\n        if (userObj) {\r\n          return { username: userObj.username, amount };\r\n        }\r\n        return null;\r\n      });\r\n    }\r\n    return [];\r\n  }\r\n);\r\n\r\n\r\nexport const showMinnicuImg = createSelector(\r\n  getDataStructureForDiffReport,\r\n  getDataStructureForAggregateReport,\r\n  (data1, data2) => data1.concat(data2).some(el => el.amount < CONSTANTS.MINNICU_THRESHOLD)\r\n);","import { selectGroupId, selectUserIds } from \"../../../redux/users/actions\";\r\nimport {\r\n  getUserList,\r\n  getSelectedSingleUserId,\r\n  getGroupListRaw,\r\n  getSelectedGroupId,\r\n  getSelectedUserIds\r\n} from \"../../../redux/users/selectors\";\r\nimport { init } from \"../../../redux/payments/actions\";\r\n\r\nexport const commonMapStateToProps = state => ({\r\n  userList: getUserList(state),\r\n  groupList: getGroupListRaw(state),\r\n  selectedUserIdList: getSelectedUserIds(state),\r\n  selectedUserId: getSelectedSingleUserId(state),\r\n  selectedGroupId: getSelectedGroupId(state)\r\n});\r\nexport const commonMapDispatchToProps = {\r\n  init,\r\n  selectUserIds,\r\n  selectGroupId\r\n};\r\n","import { AddPaymentPage } from \"./AddPaymentPage\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getSelectedGroupName,\r\n  getAssociationByGroup\r\n} from \"../../../../redux/users/selectors\";\r\nimport {\r\n  onOpenAssociationListModal,\r\n  closeAssociationsModal,\r\n  addPaymentRow,\r\n  deletePaymentRow,\r\n  clonePaymentRow,\r\n  changePaymentInput,\r\n  resetAddPayments,\r\n  handleSubmitInputPayments\r\n} from \"../../../../redux/payments/actions\";\r\nimport {\r\n  isAssociationsModalOpen,\r\n  getDataColumns,\r\n  getInputPayments,\r\n  getDisabledAddPaymentsForm\r\n} from \"../../../../redux/payments/selectors\";\r\nimport { commonMapDispatchToProps, commonMapStateToProps } from \"../commons\";\r\n\r\nconst mapStateToProps = state => ({\r\n  ...commonMapStateToProps(state),\r\n  selectedGroupName: getSelectedGroupName(state),\r\n  isAssociationsModalOpen: isAssociationsModalOpen(state),\r\n  associationsByGroup: getAssociationByGroup(state),\r\n  payments: getInputPayments(state),\r\n  dataColumns: getDataColumns(state),\r\n  disabledForm:getDisabledAddPaymentsForm(state)\r\n});\r\nconst mapDispatchToProps = {\r\n  ...commonMapDispatchToProps,\r\n  onOpenAssociationListModal,\r\n  closeAssociationsModal,\r\n  addPaymentRow,\r\n  deletePaymentRow,\r\n  clonePaymentRow,\r\n  changePaymentInput,\r\n  resetAddPayments,\r\n  handleSubmitInputPayments\r\n};\r\n\r\nexport const AddPaymentPageContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddPaymentPage);\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport \"./Accordion.scss\";\r\nimport {\r\n  faChevronDown,\r\n  faChevronRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nexport const Accordion = withNamespaces()(props => {\r\n  const {\r\n    onClick,\r\n    textKey,\r\n    t,\r\n    iconIfClosed,\r\n    iconIfOpen,\r\n    withUnderline\r\n  } = props;\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div className=\"accordion-wrapper\">\r\n      <div\r\n        className=\"accordion-trigger\"\r\n        onClick={event => {\r\n          onClick && onClick(event);\r\n          setOpen(!open);\r\n        }}\r\n      >\r\n        <p\r\n        >\r\n          <span className=\"txt\">{t(textKey)}</span>\r\n          <span>\r\n            <FontAwesomeIcon icon={open ? iconIfOpen : iconIfClosed} />\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <Collapse in={open} {...props} />\r\n      {withUnderline && <div className=\"underline\" />}\r\n    </div>\r\n  );\r\n});\r\n\r\nAccordion.defaultProps = {\r\n  text: \"\",\r\n  iconIfClosed: faChevronRight,\r\n  iconIfOpen: faChevronDown,\r\n  withUnderline: true\r\n};\r\n","import { useState } from \"react\";\r\nimport { GenericForm } from \"../../../../../common/components/form/generic-form/GenericForm\";\r\nimport { InputRow } from \"../../../../../common/components/form/input-row/InputRow\";\r\nimport { Input } from \"../../../../../common/components/form/input/Input\";\r\n\r\nexport const SearchPaymentsForm = ({\r\n  userList,\r\n  selectedUserId,\r\n  selectUserIds,\r\n  groupList,\r\n  selectedGroupId,\r\n  selectGroupId,\r\n  categoryList,\r\n  onSubmit\r\n}) => {\r\n  const [paymentId, changePaymentId] = useState();\r\n  const [importoMin, changeImportoMin] = useState();\r\n  const [importoMax, changeImportoMax] = useState();\r\n  const [selectedCategory, selectCategory] = useState(null);\r\n  const [description, changeDescription] = useState(null);\r\n  const [flgPagato, changeFlgPagato] = useState(null);\r\n  const [dateInsMin, setDateInsMin] = useState(null);\r\n  const [dateInsMax, setDateInsMax] = useState(null);\r\n  const [dateModMin, setDateModMin] = useState(null);\r\n  const [dateModMax, setDateModMax] = useState(null);\r\n  return (\r\n    <div>\r\n      <GenericForm\r\n        submitLabelKey=\"COMMON.FORM.SEARCH\"\r\n        withClearButton={false}\r\n        onSubmit={() => {\r\n          onSubmit({\r\n            idPagamento: paymentId,\r\n            idUtentePagante: selectedUserId,\r\n            idGruppoPartecipante: selectedGroupId,\r\n            idCategoriaSpesa: selectedCategory,\r\n            flgPagato: flgPagato,\r\n            importoMin: importoMin,\r\n            importoMax: importoMax,\r\n            descrizione: description,\r\n            tmsInserimentoMin: dateInsMin,\r\n            tmsInserimentoMax: dateInsMax,\r\n            tmsModificaMin: dateModMin,\r\n            tmsModificaMax: dateModMax\r\n          });\r\n        }}\r\n      >\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              type=\"number\"\r\n              labelKey=\"REPORTS.PAYMENT_ID\"\r\n              value={paymentId}\r\n              onChangeByValue={changePaymentId}\r\n            />\r\n          }\r\n          Component2={\r\n            <Input\r\n              type=\"select\"\r\n              name=\"GROUPS.USER_LIST\"\r\n              labelKey=\"PAYMENTS.PAY_USER\"\r\n              optionList={userList}\r\n              value={selectedUserId}\r\n              onChange={event => selectUserIds([event.target.value])}\r\n              valueOptionProp=\"idUtente\"\r\n              textOptionProp=\"username\"\r\n            />\r\n          }\r\n          marginBottom=\"50px\"\r\n        />\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              type=\"select\"\r\n              valueOptionProp=\"idGruppo\"\r\n              textOptionProp=\"nomeGruppo\"\r\n              optionList={groupList}\r\n              name=\"GROUPS.GROUP_LIST\"\r\n              labelKey=\"PAYMENTS.PARTECIPATION_GROUP\"\r\n              value={selectedGroupId}\r\n              onChange={event => selectGroupId(event.target.value)}\r\n            />\r\n          }\r\n          Component2={\r\n            <Input\r\n              type=\"select\"\r\n              labelKey=\"PAYMENTS.INPUT_CATEGORY\"\r\n              optionList={categoryList}\r\n              valueOptionProp=\"idCategoriaSpesa\"\r\n              textOptionProp=\"nomeCategoria\"\r\n              value={selectedCategory}\r\n              onChange={event => selectCategory(event.target.value)}\r\n            />\r\n          }\r\n          marginBottom=\"50px\"\r\n        />\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              labelKey=\"PAYMENTS.DESCRIPTION\"\r\n              value={description}\r\n              onChangeByValue={changeDescription}\r\n            />\r\n          }\r\n          Component2={\r\n            <Input\r\n              type=\"select\"\r\n              labelKey=\"REPORTS.PAID\"\r\n              optionList={[\r\n                { value: true, text: \"True\" },\r\n                { value: false, text: \"False\" }\r\n              ]}\r\n              value={flgPagato}\r\n              onChangeByValue={changeFlgPagato}\r\n            />\r\n          }\r\n          marginBottom=\"50px\"\r\n        />\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              type=\"number\"\r\n              labelKey=\"REPORTS.IMPORTO_MIN\"\r\n              value={importoMin}\r\n              onChangeByValue={changeImportoMin}\r\n            />\r\n          }\r\n          Component2={\r\n            <Input\r\n              type=\"number\"\r\n              labelKey=\"REPORTS.IMPORTO_MAX\"\r\n              value={importoMax}\r\n              onChangeByValue={changeImportoMax}\r\n            />\r\n          }\r\n          marginBottom=\"50px\"\r\n        />\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              type=\"date-picker\"\r\n              labelKey=\"REPORTS.DATA_INS_MIN\"\r\n              value={dateInsMin}\r\n              onChange={setDateInsMin}\r\n            />\r\n          }\r\n          Component2={\r\n            <Input\r\n              type=\"date-picker\"\r\n              labelKey=\"REPORTS.DATA_INS_MAX\"\r\n              value={dateInsMax}\r\n              onChange={setDateInsMax}\r\n            />\r\n          }\r\n          marginBottom=\"50px\"\r\n        />\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              type=\"date-picker\"\r\n              labelKey=\"REPORTS.DATA_MOD_MIN\"\r\n              value={dateModMin}\r\n              onChange={setDateModMin}\r\n            />\r\n          }\r\n          Component2={\r\n            <Input\r\n              type=\"date-picker\"\r\n              labelKey=\"REPORTS.DATA_MOD_MAX\"\r\n              value={dateModMax}\r\n              onChange={setDateModMax}\r\n            />\r\n          }\r\n          marginBottom=\"50px\"\r\n        />\r\n      </GenericForm>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { formatTmsToDateDDMMYYYY } from \"../../../../../../redux/common/utils\";\r\nimport { Button } from \"../../../../../common/components/form/button/Button\";\r\nimport { Input } from \"../../../../../common/components/form/input/Input\";\r\nimport { PaymentsTable } from \"../../../payments-table/PaymentsTable\";\r\nimport \"./SearchPaymentsResult.scss\";\r\nimport { faMoneyCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { IconWithTooltip } from \"../../../../../common/components/icon-with-tooltip/IconWithTooltip\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport \"./SearchPaymentsResult.scss\";\r\n\r\nconst dataColumns = [\r\n  {\r\n    paymentKey: \"idPagamento\",\r\n    headerLabelKey: \"REPORTS.PAYMENT_ID\"\r\n  },\r\n  {\r\n    paymentKey: \"utentePagante\",\r\n    headerLabelKey: \"PAYMENTS.PAY_USER\",\r\n    valueGetter: utente => utente && utente.username\r\n  },\r\n  {\r\n    paymentKey: \"gruppoPartecipante\",\r\n    headerLabelKey: \"PAYMENTS.PARTECIPATION_GROUP\",\r\n    valueGetter: gruppo => gruppo && gruppo.nomeGruppo\r\n  },\r\n  {\r\n    paymentKey: \"categoriaSpesa\",\r\n    headerLabelKey: \"PAYMENTS.INPUT_CATEGORY\",\r\n    valueGetter: categoriaSpesa =>\r\n      categoriaSpesa && categoriaSpesa.nomeCategoria\r\n  },\r\n  {\r\n    paymentKey: \"flgPagato\",\r\n    headerLabelKey: \"REPORTS.PAID\",\r\n    valueGetter: flag => !!flag,\r\n    componentRender: ({ payObj, valueGetter }) => (\r\n      <Input type=\"checkbox\" disabled checked={valueGetter(payObj)} />\r\n    )\r\n  },\r\n  {\r\n    paymentKey: \"importo\",\r\n    headerLabelKey: \"PAYMENTS.INPUT_AMOUNT\"\r\n  },\r\n  {\r\n    paymentKey: \"descrizione\",\r\n    headerLabelKey: \"PAYMENTS.DESCRIPTION\"\r\n  },\r\n  {\r\n    paymentKey: \"tmsInserimento\",\r\n    headerLabelKey: \"REPORTS.DATA_INS\",\r\n    valueGetter: formatTmsToDateDDMMYYYY\r\n  },\r\n  {\r\n    paymentKey: \"tmsModifica\",\r\n    headerLabelKey: \"REPORTS.DATA_MOD\",\r\n    valueGetter: formatTmsToDateDDMMYYYY\r\n  }\r\n];\r\n\r\nexport const SearchPaymentsResult = withNamespaces()(\r\n  ({\r\n    payments,\r\n    fetched,\r\n    aggregateAmount,\r\n    markPaymentsAsPaid,\r\n    lastFetchRequest,\r\n    t\r\n  }) => {\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"pay-btn-row\">\r\n          {fetched && (\r\n            <span>\r\n              <Button\r\n                onClick={() => {\r\n                  markPaymentsAsPaid(selectedRows, lastFetchRequest);\r\n                }}\r\n                width=\"100px\"\r\n                disabled={selectedRows.length === 0}\r\n              >\r\n                <IconWithTooltip\r\n                  fontAwesomeIconProps={{ icon: faMoneyCheck, size: \"lg\" }}\r\n                  tooltipMessageI18nKey=\"REPORTS.MARK_AS_PAID\"\r\n                />\r\n              </Button>\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {fetched && (\r\n            <p>\r\n              <span>{`${t(\"REPORTS.TOTAL\")}${aggregateAmount} €`}</span>\r\n            </p>\r\n          )}\r\n        </div>\r\n        <PaymentsTable\r\n          inquiryDataStructure\r\n          withCheckboxColumn\r\n          payments={payments}\r\n          dataColumns={dataColumns}\r\n          onChangeSelection={setSelectedRows}\r\n          isUnselectable={payment => payment.flgPagato}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import { Accordion } from \"../../../../common/components/accordion/Accordion\";\r\nimport { SearchPaymentsForm } from \"./search-payments-form/SearchPaymentsForm\";\r\nimport { SearchPaymentsResult } from \"./search-payments-result/SearchPaymentsResult\";\r\n\r\nexport const SearchPaymentsAccordion = ({\r\n  userList,\r\n  selectedUserId,\r\n  selectUserIds,\r\n  groupList,\r\n  selectedGroupId,\r\n  selectGroupId,\r\n  categoryList,\r\n  onSubmit,\r\n  payments,\r\n  fetched,\r\n  aggregateAmount,\r\n  markPaymentsAsPaid,\r\n  lastFetchRequest\r\n}) => {\r\n  return (\r\n    <Accordion textKey=\"REPORTS.PAYMENTS_SEARCH\">\r\n      <SearchPaymentsForm\r\n        userList={userList}\r\n        selectedUserId={selectedUserId}\r\n        selectUserIds={selectUserIds}\r\n        groupList={groupList}\r\n        selectedGroupId={selectedGroupId}\r\n        selectGroupId={selectGroupId}\r\n        categoryList={categoryList}\r\n        onSubmit={onSubmit}\r\n      />\r\n\r\n      <SearchPaymentsResult\r\n        payments={payments}\r\n        fetched={fetched}\r\n        aggregateAmount={aggregateAmount}\r\n        markPaymentsAsPaid={markPaymentsAsPaid}\r\n        lastFetchRequest={lastFetchRequest}\r\n      />\r\n    </Accordion>\r\n  );\r\n};\r\n","import { Accordion } from \"../../../../common/components/accordion/Accordion\";\r\nimport { GenericForm } from \"../../../../common/components/form/generic-form/GenericForm\";\r\nimport { Input } from \"../../../../common/components/form/input/Input\";\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { IconWithTooltip } from \"../../../../common/components/icon-with-tooltip/IconWithTooltip\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport { InputRow } from \"../../../../common/components/form/input-row/InputRow\";\r\nimport \"./CommonReportAccordion.scss\";\r\n\r\nexport const CommonReportAccordion = withNamespaces()(\r\n  ({\r\n    accordionTextKey,\r\n    userList,\r\n    onSubmit,\r\n    infoTooltipLabelKey,\r\n    selectedUserIds,\r\n    selectUserIds,\r\n    t,\r\n    children\r\n  }) => {\r\n    return (\r\n      <Accordion textKey={accordionTextKey} className=\"common-report-accordion\">\r\n        <div className=\"info-icon-row\">\r\n            <span className=\"txt\">\r\n                {t(\"COMMON.INFO\")}\r\n            </span>\r\n          <IconWithTooltip\r\n            tootlipMessage={\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: t(infoTooltipLabelKey)\r\n                }}\r\n              ></div>\r\n            }\r\n            fontAwesomeIconProps={{\r\n              icon: faInfoCircle,\r\n              size: \"3x\"\r\n            }}\r\n            otherTooltipSpanProps={{\r\n              style: {\r\n                minWidth: \"1000px\"\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <GenericForm\r\n          onSubmit={onSubmit}\r\n          withClearButton={false}\r\n          disableSubmitBtn={!selectedUserIds || selectedUserIds.length === 0}\r\n        >\r\n          <InputRow\r\n            Component1={\r\n              <Input\r\n                type=\"multiple-select\"\r\n                name=\"GROUPS.USER_LIST\"\r\n                labelKey=\"GROUPS.USER_LIST\"\r\n                valueOptionProp=\"idUtente\"\r\n                textOptionProp=\"username\"\r\n                optionList={userList}\r\n                value={selectedUserIds}\r\n                onChangeByValue={selectUserIds}\r\n              />\r\n            }\r\n          />\r\n        </GenericForm>\r\n        <div className=\"children-container\">\r\n            {children}\r\n        </div>\r\n      </Accordion>\r\n    );\r\n  }\r\n);\r\n\r\nCommonReportAccordion.defaultProps = {\r\n  accordionTextKey: \"\",\r\n  userList: [],\r\n  infoTooltipLabelKey: \"\"\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { CommonReportAccordion } from \"../common-report-accordion/CommonReportAccordion\";\r\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./DiffReportAccordion.scss\";\r\nimport { SIDEBAR_COLOR_EX } from \"../../../../common/constants\";\r\n\r\nconst OutputRow = ({ element }) => {\r\n  const { leftArrowUser, rightArrowUser, amount } = element;\r\n  return (\r\n    <li onClick={() => console.log(element)}>\r\n      <div className=\"output-item-content\">\r\n        <span className=\"user-txt\">{leftArrowUser}</span>\r\n        <span className=\"icon\">\r\n          <FontAwesomeIcon\r\n            icon={faArrowRight}\r\n            size={\"3x\"}\r\n            color={SIDEBAR_COLOR_EX}\r\n          />\r\n        </span>\r\n        <span className=\"user-txt\">{rightArrowUser}{\": \"}</span>\r\n        <span className=\"amount\">\r\n          {amount}\r\n          {\" €\"}\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport const DiffReportAccordion = ({\r\n  userList,\r\n  getReportDiffByUsers,\r\n  selectedUserIdList,\r\n  selectUserIds,\r\n  dataStructureForDiffReport\r\n}) => {\r\n  return (\r\n    <CommonReportAccordion\r\n      accordionTextKey={\"REPORTS.CALCULATE_DIFFS\"}\r\n      userList={userList}\r\n      onSubmit={() => getReportDiffByUsers(selectedUserIdList)}\r\n      infoTooltipLabelKey={\"REPORTS.CALCULATE_DIFFS_INFO_INNER_HTML\"}\r\n      selectedUserIds={selectedUserIdList}\r\n      selectUserIds={selectUserIds}\r\n    >\r\n      <ul className=\"unordered-list\">\r\n        {dataStructureForDiffReport.map(el => (\r\n          <OutputRow element={el} />\r\n        ))}\r\n      </ul>\r\n    </CommonReportAccordion>\r\n  );\r\n};\r\n","import { CommonReportAccordion } from \"../common-report-accordion/CommonReportAccordion\";\r\nimport \"./AggregateReportAccordion.scss\";\r\n\r\nconst getClassNameByAmount = amount => {\r\n  let classAggregate = \"amount\";\r\n  if (amount > 0) {\r\n    classAggregate += \" positive\";\r\n  }\r\n  if (amount < 0) {\r\n    classAggregate += \" negative\";\r\n  }\r\n  return classAggregate;\r\n};\r\n\r\nconst OutputRow = ({ element }) => {\r\n  const { username, amount } = element;\r\n  return (\r\n    <li className=\"output-list-item\">\r\n      <div className=\"output-item-content\">\r\n        <span className=\"user-txt\">\r\n          {username}\r\n          {\": \"}\r\n        </span>\r\n        <span className={getClassNameByAmount(amount)}>\r\n          {amount}\r\n          {\" €\"}\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport const AggregateReportAccordion = ({\r\n  userList,\r\n  getReportAggregateByUser,\r\n  selectedUserIdList,\r\n  selectUserIds,\r\n  dataStructureForAggregateReport\r\n}) => {\r\n  return (\r\n    <CommonReportAccordion\r\n      accordionTextKey={\"REPORTS.AGGREGATE_ALL\"}\r\n      userList={userList}\r\n      onSubmit={() => getReportAggregateByUser(selectedUserIdList)}\r\n      infoTooltipLabelKey={\"REPORTS.AGGREGATE_ALL_INFO_INNER_HTML\"}\r\n      selectedUserIds={selectedUserIdList}\r\n      selectUserIds={selectUserIds}\r\n    >\r\n      <ul className=\"unordered-list\">\r\n        {dataStructureForAggregateReport.map(el => (\r\n          <OutputRow element={el} />\r\n        ))}\r\n      </ul>\r\n    </CommonReportAccordion>\r\n  );\r\n};\r\n","import { GenericModal } from \"../../../../common/components/generic-modal/GenericModal\";\r\nimport \"./MinnicuModal.scss\";\r\n\r\nexport const MinnicuModal = ({ shouldShowMinnicuModal }) => {\r\n  \r\n  if (shouldShowMinnicuModal) {\r\n    return (\r\n      <GenericModal>\r\n        <div className=\"minnicu-modal\">\r\n          <img src=\"MinnicuImg.jpg\" width=\"500\" height=\"500\" />\r\n        </div>\r\n      </GenericModal>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","import { withChangeIconOnInit } from \"../../../common/hocs/withChangeIconOnInit\";\r\nimport { PAYMENTS_KEY } from \"../../../common/constants\";\r\nimport { SinglePageTemplate } from \"../../../layout/content/single-page-template/SinglePageTemplate\";\r\nimport { SearchPaymentsAccordion } from \"./search-payments-accordion/SearchPaymentsAccordion\";\r\nimport { DiffReportAccordion } from \"./diff-report-accordion/DiffReportAccordion\";\r\nimport { AggregateReportAccordion } from \"./aggregate-report-accordion/AggregateReportAccordion\";\r\nimport { MinnicuModal } from \"./minnicu-modal/MinnicuModal\";\r\n\r\nconst ReportsPageComponent = ({\r\n  init,\r\n  changePaymentId,\r\n  paymentId,\r\n  userList,\r\n  selectedUserId,\r\n  selectUserIds,\r\n  groupList,\r\n  selectedGroupId,\r\n  selectGroupId,\r\n  categoryList,\r\n  fetchPaymentsByFilters,\r\n  payments,\r\n  fetched,\r\n  aggregateAmount,\r\n  markPaymentsAsPaid,\r\n  lastFetchRequest,\r\n  selectedUserIdList,\r\n  getReportDiffByUsers,\r\n  getReportAggregateByUser,\r\n  dataStructureForDiffReport,\r\n  shouldShowMinnicuImg,\r\n  dataStructureForAggregateReport\r\n}) => {\r\n  return (\r\n    <SinglePageTemplate onInit={init} h1LabelKey={\"REPORTS.TITLE\"}>\r\n      <SearchPaymentsAccordion\r\n        changePaymentId={changePaymentId}\r\n        paymentId={paymentId}\r\n        userList={userList}\r\n        selectedUserId={selectedUserId}\r\n        selectUserIds={selectUserIds}\r\n        groupList={groupList}\r\n        selectedGroupId={selectedGroupId}\r\n        selectGroupId={selectGroupId}\r\n        categoryList={categoryList}\r\n        onSubmit={fetchPaymentsByFilters}\r\n        payments={payments}\r\n        fetched={fetched}\r\n        aggregateAmount={aggregateAmount}\r\n        markPaymentsAsPaid={markPaymentsAsPaid}\r\n        lastFetchRequest={lastFetchRequest}\r\n      />\r\n      <DiffReportAccordion\r\n        userList={userList}\r\n        getReportDiffByUsers={getReportDiffByUsers}\r\n        selectedUserIdList={selectedUserIdList}\r\n        selectUserIds={selectUserIds}\r\n        dataStructureForDiffReport={dataStructureForDiffReport}\r\n      />\r\n      <AggregateReportAccordion\r\n        userList={userList}\r\n        getReportAggregateByUser={getReportAggregateByUser}\r\n        selectedUserIdList={selectedUserIdList}\r\n        selectUserIds={selectUserIds}\r\n        dataStructureForAggregateReport={dataStructureForAggregateReport}\r\n      />\r\n      <MinnicuModal shouldShowMinnicuModal={shouldShowMinnicuImg} />\r\n    </SinglePageTemplate>\r\n  );\r\n};\r\n\r\nexport const ReportsPage = withChangeIconOnInit(PAYMENTS_KEY)(\r\n  ReportsPageComponent\r\n);\r\n","import { ReportsPage } from \"./ReportsPage\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getByFiltersList,\r\n  listFetchedAtLeastOnce,\r\n  aggregateAmountByFiltyers,\r\n  getFetchByFiltersRequest,\r\n  getDataStructureForDiffReport,\r\n  showMinnicuImg,\r\n  getDataStructureForAggregateReport\r\n} from \"../../../../redux/payments/selectors\";\r\nimport {\r\n  fetchPaymentsByFilters,\r\n  markPaymentsAsPaid,\r\n  getReportDiffByUsers,\r\n  getReportAggregateByUser\r\n} from \"../../../../redux/payments/actions\";\r\n\r\nimport { getCategoryList } from \"../../../../redux/spending-categories/selectors\";\r\n\r\nimport { commonMapDispatchToProps, commonMapStateToProps } from \"../commons\";\r\n\r\nconst mapStateToProps = state => ({\r\n  ...commonMapStateToProps(state),\r\n  categoryList: getCategoryList(state),\r\n  payments: getByFiltersList(state),\r\n  fetched: listFetchedAtLeastOnce(state),\r\n  aggregateAmount: aggregateAmountByFiltyers(state),\r\n  lastFetchRequest: getFetchByFiltersRequest(state),\r\n  dataStructureForDiffReport:getDataStructureForDiffReport(state),\r\n  shouldShowMinnicuImg:showMinnicuImg(state),\r\n  dataStructureForAggregateReport:getDataStructureForAggregateReport(state)\r\n});\r\nconst mapDispatchToProps = {\r\n  ...commonMapDispatchToProps,\r\n  fetchPaymentsByFilters,\r\n  markPaymentsAsPaid,\r\n  getReportDiffByUsers,\r\n  getReportAggregateByUser\r\n};\r\n\r\nexport const ReportsPageContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ReportsPage);\r\n","import { useState, useEffect } from \"react\";\r\nimport { withChangeIconOnInit } from \"../../common/hocs/withChangeIconOnInit\";\r\nimport { SETTINGS_KEY } from \"../../common/constants\";\r\nimport { GenericForm } from \"../../common/components/form/generic-form/GenericForm\";\r\nimport { SinglePageTemplate } from \"../../layout/content/single-page-template/SinglePageTemplate\";\r\nimport { InputRow } from \"../../common/components/form/input-row/InputRow\";\r\nimport { Input } from \"../../common/components/form/input/Input\";\r\nimport { HOSTNAME_OPTIONS } from \"../../../redux/common/constants\";\r\nimport { withNamespaces } from \"react-i18next\";\r\n\r\nconst SettingsPageComponent = ({\r\n  customHostname,\r\n  isFormDisabled,\r\n  changeCustomHostname,\r\n  selectedHostname,\r\n  selectHostname,\r\n  isCustomSelected,\r\n  setHostnameByType,\r\n  t\r\n}) => {\r\n  const [hostnameOptions, setHostnameOptions] = useState([]);\r\n  useEffect(() => {\r\n    setHostnameOptions(\r\n      HOSTNAME_OPTIONS.map(id => ({\r\n        id,\r\n        label: t(`SETTINGS.FORM.OPTION_LIST.${id}`)\r\n      }))\r\n    );\r\n  }, []);\r\n  return (\r\n    <SinglePageTemplate h1LabelKey={\"SETTINGS.TITLE\"}>\r\n      <GenericForm disableSubmitBtn={isFormDisabled} onSubmit={() => setHostnameByType(selectedHostname, customHostname)}>\r\n        <InputRow\r\n          Component1={\r\n            <Input\r\n              type=\"select\"\r\n              name=\"SETTINGS.FORM.HOSTNAME_LIST\"\r\n              labelKey=\"SETTINGS.FORM.HOSTNAME_LIST\"\r\n              optionList={hostnameOptions}\r\n              value={selectedHostname}\r\n              onChangeByValue={selectHostname}\r\n              valueOptionProp=\"id\"\r\n              textOptionProp=\"label\"\r\n            />\r\n          }\r\n          Component2={\r\n            isCustomSelected ? (\r\n              <Input\r\n                name=\"SETTINGS.FORM.CUSTOM_HOSTNAME\"\r\n                labelKey=\"SETTINGS.FORM.CUSTOM_HOSTNAME\"\r\n                value={customHostname}\r\n                onChangeByValue={changeCustomHostname}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )\r\n          }\r\n        />\r\n        {}\r\n      </GenericForm>\r\n    </SinglePageTemplate>\r\n  );\r\n};\r\n\r\nexport const SettingsPage = withNamespaces()(\r\n  withChangeIconOnInit(SETTINGS_KEY)(SettingsPageComponent)\r\n);\r\n","export const HOSTNAME_CHANGED = \"settings/hostname-changed\";\r\nexport const HOSTNAME_SELECTED = \"settings/hostname-selected\";\r\nexport const CUSTOM_HOSTNAME_CHANGED = \"settings/custom-hostname-changed\";","import { connect } from \"react-redux\";\r\nimport { SettingsPage } from \"./SettingsPage\";\r\n\r\nimport {\r\n  setHostnameByType,\r\n  selectHostname,\r\n  changeCustomHostname\r\n} from \"../../../redux/settings/actions\";\r\nimport {\r\n  getHostname,\r\n  getSelectedHostname,\r\n  getCustomHostname,\r\n  isSelectHostnameFormDisabled,\r\n  isCustomHostnameSelected\r\n} from \"../../../redux/settings/selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n  hostname: getHostname(state),\r\n  selectedHostname: getSelectedHostname(state),\r\n  customHostname: getCustomHostname(state),\r\n  isFormDisabled: isSelectHostnameFormDisabled(state),\r\n  isCustomSelected:isCustomHostnameSelected(state)\r\n});\r\n\r\nconst mapDispatchToProps = { setHostnameByType, selectHostname, changeCustomHostname };\r\n\r\nexport const SettingsPageContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SettingsPage);\r\n","import { CUSTOM_HOSTNAME_CHANGED, HOSTNAME_CHANGED, HOSTNAME_SELECTED } from \"./actionTypes\";\r\nimport {\r\n  getHostname as getHostNameSelector,\r\n  MAP_TYPE_TO_HOSTNAME\r\n} from \"./selectors\";\r\n\r\nexport const getHostname = () => (dispatch, getState) =>\r\n  getHostNameSelector(getState());\r\n\r\nconst changeHostname = hostname => ({\r\n  type: HOSTNAME_CHANGED,\r\n  payload: { hostname }\r\n});\r\n\r\nexport const changeCustomHostname = customHostname => ({\r\n  type: CUSTOM_HOSTNAME_CHANGED,\r\n  payload: { customHostname }\r\n});\r\n\r\nexport const selectHostname = selectedHostname => ({\r\n  type: HOSTNAME_SELECTED,\r\n  payload: { selectedHostname }\r\n});\r\n\r\nexport const setHostnameByType = (selectedHostname, customHostname) => dispatch => {\r\n  const newHostname = MAP_TYPE_TO_HOSTNAME[selectedHostname] || customHostname;\r\n  newHostname && dispatch(changeHostname(newHostname));\r\n};","import { DataGrid } from \"@material-ui/data-grid\";\r\nimport { GenericForm } from \"../../common/components/form/generic-form/GenericForm\";\r\nimport { InputRow } from \"../../common/components/form/input-row/InputRow\";\r\nimport { Input } from \"../../common/components/form/input/Input\";\r\nimport { SinglePageTemplate } from \"../../layout/content/single-page-template/SinglePageTemplate\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport { SPENDING_CATEGORIES_KEY } from \"../../common/constants\";\r\nimport { withChangeIconOnInit } from \"../../common/hocs/withChangeIconOnInit\";\r\nimport \"./SpendingCategories.scss\";\r\n\r\nconst columns = [\r\n  { field: \"idCategoriaSpesa\", headerName: \"Id\", width: 70 },\r\n  {\r\n    field: \"nomeCategoria\",\r\n    headerName: \"Nome Categoria\",\r\n    width: 250\r\n  },\r\n  { field: \"noteCategoria\", headerName: \"Note Categoria\", width: 750 }\r\n];\r\n\r\nconst SpendingCategoriesComponent = withNamespaces()(\r\n  ({\r\n    t,\r\n    categoryList,\r\n    nomeCategoria,\r\n    noteCategoria,\r\n    changeSpendingCategoryName,\r\n    changeSpendingCategoryNotes,\r\n    fetchAllSpendingCategories,\r\n    insertSpendingCategory\r\n  }) => {\r\n    return (\r\n      <SinglePageTemplate\r\n        h1LabelKey=\"SPENDING_CATEGORIES.TITLE\"\r\n        onInit={fetchAllSpendingCategories}\r\n      >\r\n        <div className=\"table-wrapper\">\r\n          <DataGrid columns={columns} rows={categoryList} pageSize={10} />\r\n        </div>\r\n        <h2 className=\"heading\">{t(\"SPENDING_CATEGORIES.SUBTITLE\")}</h2>\r\n        <GenericForm\r\n          withClearButton={false}\r\n          disableSubmitBtn={!nomeCategoria || !noteCategoria}\r\n          onSubmit={() => {\r\n            insertSpendingCategory(nomeCategoria, noteCategoria).then(res =>\r\n              fetchAllSpendingCategories()\r\n            );\r\n          }}\r\n        >\r\n          <InputRow\r\n            Component1={\r\n              <Input\r\n                name=\"SPENDING_CATEGORIES.NAME\"\r\n                labelKey=\"SPENDING_CATEGORIES.NAME\"\r\n                value={nomeCategoria}\r\n                onChange={event =>\r\n                  changeSpendingCategoryName(event.target.value)\r\n                }\r\n              />\r\n            }\r\n            Component2={\r\n              <Input\r\n                name=\"SPENDING_CATEGORIES.NOTES\"\r\n                labelKey=\"SPENDING_CATEGORIES.NOTES\"\r\n                value={noteCategoria}\r\n                onChange={event =>\r\n                  changeSpendingCategoryNotes(event.target.value)\r\n                }\r\n              />\r\n            }\r\n          />\r\n        </GenericForm>\r\n      </SinglePageTemplate>\r\n    );\r\n  }\r\n);\r\n\r\nexport const SpendingCategories = withChangeIconOnInit(SPENDING_CATEGORIES_KEY)(SpendingCategoriesComponent);","import { SpendingCategories } from \"./SpendingCategories\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  changeSpendingCategoryName,\r\n  changeSpendingCategoryNotes,\r\n  fetchAllSpendingCategories,\r\n  insertSpendingCategory\r\n} from \"../../../redux/spending-categories/actions\";\r\nimport {\r\n  getCategoryList,\r\n  getNomeCategoria,\r\n  getNoteCategoria\r\n} from \"../../../redux/spending-categories/selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n  categoryList: getCategoryList(state),\r\n  nomeCategoria: getNomeCategoria(state),\r\n  noteCategoria: getNoteCategoria(state)\r\n});\r\nconst mapDispatchToProps = {\r\n  changeSpendingCategoryName,\r\n  changeSpendingCategoryNotes,\r\n  fetchAllSpendingCategories,\r\n  insertSpendingCategory\r\n};\r\n\r\nexport const SpendingCategoriesContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SpendingCategories);\r\n","import {\r\n  MENU_INIT,\r\n  MENU_ICON_CLICKED,\r\n  MENU_ACTIVE_ICON_CHANGED,\r\n  MENU_SECOND_LEVEL_SIDEBAR_OPENED,\r\n  MENU_SECOND_LEVEL_SIDEBAR_CLOSED,\r\n  MENU_SECOND_LEVEL_SIDEBAR_TOGGLED\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  menuItems: [],\r\n  clickedIcon: null,\r\n  activeIcon: null,\r\n  secondLevelSidebarOpen:false\r\n};\r\n\r\nexport const menuReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MENU_INIT: {\r\n      const { menuItems, initialActiveIcon } = action.payload;\r\n      const activeIcon = initialActiveIcon || (menuItems && menuItems[0]) || null;\r\n      return { ...state, menuItems, activeIcon };\r\n    }\r\n    case MENU_ICON_CLICKED: {\r\n        return { ...state, clickedIcon:action.payload.clickedIcon };\r\n    }\r\n    case MENU_ACTIVE_ICON_CHANGED: {\r\n        return { ...state, activeIcon:action.payload.activeIcon };\r\n    }\r\n    case MENU_SECOND_LEVEL_SIDEBAR_OPENED: {\r\n        return { ...state, secondLevelSidebarOpen:true };\r\n    }\r\n    case MENU_SECOND_LEVEL_SIDEBAR_CLOSED: {\r\n        return { ...state, secondLevelSidebarOpen:false };\r\n    }\r\n    case MENU_SECOND_LEVEL_SIDEBAR_TOGGLED: {\r\n        return { ...state, secondLevelSidebarOpen:!state.secondLevelSidebarOpen };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { LOCAL_BE_HOST_NAME, HOSTNAME_VALUES } from \"../common/constants\";\r\nimport {\r\n  CUSTOM_HOSTNAME_CHANGED,\r\n  HOSTNAME_CHANGED,\r\n  HOSTNAME_SELECTED\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  hostname:LOCAL_BE_HOST_NAME,\r\n  selectedHostname:HOSTNAME_VALUES.LOCAL_BE,\r\n  customHostname:\"\"\r\n};\r\n\r\nexport const settingsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HOSTNAME_CHANGED: {\r\n      return { ...state, hostname:action.payload.hostname };\r\n    }\r\n    case HOSTNAME_SELECTED: {\r\n      const selectedHostname = action.payload.selectedHostname;\r\n      const newState = { ...state, selectedHostname };\r\n      if(selectedHostname !== HOSTNAME_VALUES.CUSTOM){\r\n        newState.customHostname = \"\";\r\n      }\r\n      return { ...newState };\r\n    }\r\n    case CUSTOM_HOSTNAME_CHANGED: {\r\n      return { ...state, customHostname:action.payload.customHostname };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  ALERT_TYPE_ERROR,\r\n  ALERT_TYPE_SUCCESS,\r\n  ALERT_TYPE_INFO\r\n} from \"../common/constants\";\r\n\r\nimport {\r\n  ALERT_SHOWN,\r\n  ALERT_HIDDEN,\r\n  ALERT_TYPE_SET,\r\n  ALERT_SHOW_TIME_CHANGED,\r\n  ALERT_STATE_RESET,\r\n  FEEDBACK_MODAL_OPENED,\r\n  FEEDBACK_MODAL_CLOSED,\r\n  FEEDBACK_MODAL_TITLEKEY_SET,\r\n  FEEDBACK_MODAL_SUBTITLEKEY_SET,\r\n  FEEDBACK_MODAL_SUCCESS_SET,\r\n  FEEDBACK_MODAL_STATE_RESET\r\n} from \"./actionTypes\";\r\n\r\nconst ALERT_DEFAULT_SHOW_TIME = 2500;\r\nconst FEEDBACK_DEFAULT_TITLE = \"FEEDBACK.DEFAULT_TITLE\";\r\nconst FEEDBACK_DEFAULT_SUBTITLE = \"FEEDBACK.DEFAULT_SUBTITLE\";\r\n\r\nconst initialState = {\r\n  showAlert: false,\r\n  alertType: ALERT_TYPE_ERROR,\r\n  showTime: ALERT_DEFAULT_SHOW_TIME,\r\n  isFeedbackModalOpen: false,\r\n  feedbackModalTitleKey: FEEDBACK_DEFAULT_TITLE,\r\n  feedbackModalSubtitleKey: FEEDBACK_DEFAULT_SUBTITLE,\r\n  isFeedbackModalSuccess: true,\r\n};\r\n\r\nexport const feedbackManagerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ALERT_SHOWN: {\r\n      return { ...state, showAlert: true };\r\n    }\r\n    case ALERT_HIDDEN: {\r\n      return { ...state, showAlert: false };\r\n    }\r\n    case ALERT_TYPE_SET: {\r\n      return { ...state, alertType: action.payload.alertType };\r\n    }\r\n    case ALERT_SHOW_TIME_CHANGED: {\r\n      return { ...state, showTime: action.payload.showTime };\r\n    }\r\n    case ALERT_STATE_RESET: {\r\n      return {\r\n        ...state,\r\n        showAlert: false,\r\n        alertType: ALERT_TYPE_ERROR,\r\n        showTime: ALERT_DEFAULT_SHOW_TIME\r\n      };\r\n    }\r\n    case FEEDBACK_MODAL_OPENED: {\r\n      return {...state, isFeedbackModalOpen:true };\r\n    }\r\n    case FEEDBACK_MODAL_CLOSED: {\r\n      return {...state, isFeedbackModalOpen:false };\r\n    }\r\n    case FEEDBACK_MODAL_TITLEKEY_SET: {\r\n      return { ...state, feedbackModalTitleKey: action.payload.feedbackModalTitleKey };\r\n    }\r\n    case FEEDBACK_MODAL_SUBTITLEKEY_SET: {\r\n      return { ...state, feedbackModalSubtitleKey: action.payload.feedbackModalSubtitleKey };\r\n    }\r\n    case FEEDBACK_MODAL_SUCCESS_SET: {\r\n      return  { ...state, isFeedbackModalSuccess: action.payload.isFeedbackModalSuccess };\r\n    }\r\n    case FEEDBACK_MODAL_STATE_RESET: {\r\n      return {\r\n          ...state,\r\n          isFeedbackModalOpen: false,\r\n          isFeedbackModalSuccess: true,\r\n          feedbackModalTitleKey: FEEDBACK_DEFAULT_TITLE,\r\n          feedbackModalSubtitleKey: FEEDBACK_DEFAULT_SUBTITLE\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const loaderSlice = state => state.loaderReducer;\r\n\r\nexport const getOldValueByDotNotation = (state, parts) => {\r\n  return parts.reduce(\r\n    (accumulatedState, currentKey) =>\r\n      accumulatedState && accumulatedState[currentKey],\r\n    state\r\n  );\r\n};\r\n\r\nexport const isLoadingByKey = key =>\r\n  createSelector(loaderSlice, state =>\r\n    getOldValueByDotNotation(state, key.split(\".\"))\r\n  );\r\n","import { LOADER_INCREASED, LOADER_DECREASED } from \"./actionTypes\";\r\nimport { getOldValueByDotNotation } from \"./selectors\";\r\n\r\nconst initialState = {\r\n    GLOBAL:0,\r\n    USER:{\r\n        TEST_SUB_KEY:0\r\n    }\r\n};\r\n\r\nconst getNewStateByDotNotation = (state, key, add) => {\r\n  const parts = key.split(\".\");\r\n  const subState = parts.reduce((accumulatedState, currentKey, index) => {\r\n    if (index < parts.length - 1) {\r\n      return { ...accumulatedState, [currentKey]: {} };\r\n    } else {\r\n      const currentCounter = getOldValueByDotNotation(state, parts);\r\n      const secondAddend = add ? 1 : -1;\r\n      return {\r\n        ...accumulatedState,\r\n        [currentKey]: currentCounter + secondAddend\r\n      };\r\n    }\r\n  }, {});\r\n  return { ...state, ...subState };\r\n};\r\n\r\nexport const loaderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADER_INCREASED: {\r\n      return getNewStateByDotNotation(state, action.payload.key, true);\r\n    }\r\n    case LOADER_DECREASED: {\r\n      return getNewStateByDotNotation(state, action.payload.key, false);\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  USERNAME_CHANGED,\r\n  ADD_GROUP_WITH_SINGLE_USER_CHANGED,\r\n  CREATE_USER_SUBMITTED,\r\n  CREATE_USER_FORM_RESET,\r\n  USER_LIST_FETCHED,\r\n  GROUP_NAME_CHANGED,\r\n  GROUP_NOTES_CHANGED,\r\n  GROUP_LIST_FETCHED,\r\n  ASSOCIATION_BY_GROUP_FETCHED,\r\n  GROUP_SELECTED,\r\n  USER_SELECTED,\r\n  RESET_ASSOCIATIONS,\r\n  USERS_STATE_RESET\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  addGroupWithSingleUser: true,\r\n  createUserResponse: null,\r\n  userList: [],\r\n  groupName: \"\",\r\n  groupNotes: \"\",\r\n  groupList: [],\r\n  selectedGroupId: \"\",\r\n  selectedUserIds: [],\r\n  associationByGroup: []\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERNAME_CHANGED: {\r\n      return { ...state, username: action.payload.username };\r\n    }\r\n    case ADD_GROUP_WITH_SINGLE_USER_CHANGED: {\r\n      return {\r\n        ...state,\r\n        addGroupWithSingleUser: action.payload.addGroupWithSingleUser\r\n      };\r\n    }\r\n    case CREATE_USER_SUBMITTED: {\r\n      return {\r\n        ...state,\r\n        createUserResponse: action.payload.createUserResponse\r\n      };\r\n    }\r\n    case CREATE_USER_FORM_RESET: {\r\n      return {\r\n        ...state,\r\n        username: \"\",\r\n        addGroupWithSingleUser: true,\r\n        createUserResponse: null\r\n      };\r\n    }\r\n    case USER_LIST_FETCHED: {\r\n      return { ...state, userList: action.payload.userList };\r\n    }\r\n    case GROUP_NAME_CHANGED: {\r\n      return { ...state, groupName: action.payload.groupName };\r\n    }\r\n    case GROUP_NOTES_CHANGED: {\r\n      return { ...state, groupNotes: action.payload.groupNotes };\r\n    }\r\n    case GROUP_LIST_FETCHED: {\r\n      return { ...state, groupList: action.payload.groupList };\r\n    }\r\n    case GROUP_SELECTED: {\r\n      return { ...state, selectedGroupId: action.payload.selectedGroupId };\r\n    }\r\n    case USER_SELECTED: {\r\n      return { ...state, selectedUserIds: action.payload.selectedUserIds };\r\n    }\r\n    case ASSOCIATION_BY_GROUP_FETCHED: {\r\n      return {\r\n        ...state,\r\n        associationByGroup: action.payload.associationByGroup\r\n      };\r\n    }\r\n    case USERS_STATE_RESET: {\r\n      return { ...initialState };\r\n    }\r\n    case RESET_ASSOCIATIONS: {\r\n      return {\r\n        ...state,\r\n        selectedGroupId: \"\",\r\n        selectedUserIds: [],\r\n        associationByGroup: []\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  SPENDING_CATEGORIES_FETCHED,\r\n  SPENDING_CATEGORY_SELECTED,\r\n  SPENDING_CATEGORY_NAME_CHANGED,\r\n  SPENDING_CATEGORY_NOTES_CHANGED\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  categoryList: [],\r\n  selectedCategoryId: \"\",\r\n  nomeCategoria: \"\",\r\n  noteCategoria: \"\"\r\n};\r\n\r\nexport const spendingCategoriesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SPENDING_CATEGORIES_FETCHED: {\r\n      return { ...state, categoryList: action.payload.categoryList };\r\n    }\r\n    case SPENDING_CATEGORY_SELECTED: {\r\n      return {\r\n        ...state,\r\n        selectedCategoryId: action.payload.selectedCategoryId\r\n      };\r\n    }\r\n    case SPENDING_CATEGORY_NAME_CHANGED: {\r\n      return {\r\n        ...state,\r\n        nomeCategoria: action.payload.nomeCategoria\r\n      };\r\n    }\r\n    case SPENDING_CATEGORY_NOTES_CHANGED: {\r\n      return {\r\n        ...state,\r\n        noteCategoria: action.payload.noteCategoria\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { HOME_INIT_FETCHED } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    initResponse:null\r\n};\r\n\r\nexport const homeReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case HOME_INIT_FETCHED:{\r\n            return { ...state, initResponse:action.payload.initResponse };\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}","import {\r\n  ASSOCIATIONS_MODAL_OPENED,\r\n  ASSOCIATIONS_MODAL_CLOSED,\r\n  INPUT_PAYMENT_ROW_ADDED,\r\n  INPUT_PAYMENT_ROW_DELETED,\r\n  INPUT_PAYMENT_ROW_CLONED,\r\n  INPUT_PAYMENT_CHANGED,\r\n  ADD_PAYMENTS_RESET,\r\n  INPUT_PAYMENT_SUBMITTED,\r\n  PAYMENTS_BY_FILTERS_FETCHED,\r\n  PAYMENTS_STATE_RESET,\r\n  FETCH_PAYMENTS_BY_FILTERS_STARTED,\r\n  DIFF_REPORT_FETCHED,\r\n  AGGREGATE_REPORT_FETCHED\r\n} from \"./actionTypes\";\r\n\r\nconst emptyPayment = {\r\n  descrizione: { value: \"\" },\r\n  idCategoriaSpesa: { value: \"\" },\r\n  importo: { value: \"\" }\r\n};\r\n\r\nconst initialState = {\r\n  associationModalOpen: false,\r\n  inputPayments: [emptyPayment],\r\n  massiveSaveResponse: null,\r\n  fetchByFiltersRequest: null,\r\n  fetchByFiltersResponse: null,\r\n  diffReportResponse: null,\r\n  aggregateReportResponse: null\r\n};\r\n\r\nexport const paymentsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ASSOCIATIONS_MODAL_OPENED: {\r\n      return { ...state, associationModalOpen: true };\r\n    }\r\n    case ASSOCIATIONS_MODAL_CLOSED: {\r\n      return { ...state, associationModalOpen: false };\r\n    }\r\n    case INPUT_PAYMENT_ROW_ADDED: {\r\n      const inputPayments = state.inputPayments.concat(emptyPayment);\r\n\r\n      return {\r\n        ...state,\r\n        inputPayments\r\n      };\r\n    }\r\n    case INPUT_PAYMENT_ROW_DELETED: {\r\n      const { paymentIndex } = action.payload;\r\n      const partOne = state.inputPayments.slice(0, paymentIndex);\r\n      const partTwo = state.inputPayments.slice(paymentIndex + 1);\r\n      const inputPayments = partOne.concat(partTwo);\r\n\r\n      return { ...state, inputPayments };\r\n    }\r\n    case INPUT_PAYMENT_ROW_CLONED: {\r\n      const inputPayments = state.inputPayments.concat(\r\n        state.inputPayments[action.payload.paymentIndex]\r\n      );\r\n      return {\r\n        ...state,\r\n        inputPayments\r\n      };\r\n    }\r\n    case INPUT_PAYMENT_CHANGED: {\r\n      const { paymentIndex, paymentKey, value } = action.payload;\r\n\r\n      const partOne = state.inputPayments.slice(0, paymentIndex);\r\n      const partThree = state.inputPayments.slice(paymentIndex + 1);\r\n\r\n      const newPayments = partOne\r\n        .concat([\r\n          {\r\n            ...state.inputPayments[paymentIndex],\r\n            [paymentKey]: {\r\n              ...state.inputPayments[paymentIndex][paymentKey],\r\n              value\r\n            }\r\n          }\r\n        ])\r\n        .concat(partThree);\r\n\r\n      return { ...state, inputPayments: newPayments };\r\n    }\r\n    case ADD_PAYMENTS_RESET: {\r\n      return {\r\n        ...state,\r\n        associationModalOpen: false,\r\n        inputPayments: [emptyPayment]\r\n      };\r\n    }\r\n    case INPUT_PAYMENT_SUBMITTED: {\r\n      return {\r\n        ...state,\r\n        massiveSaveResponse: action.payload.massiveSaveResponse\r\n      };\r\n    }\r\n    case PAYMENTS_BY_FILTERS_FETCHED: {\r\n      return {\r\n        ...state,\r\n        fetchByFiltersResponse: action.payload.fetchByFiltersResponse\r\n      };\r\n    }\r\n    case FETCH_PAYMENTS_BY_FILTERS_STARTED: {\r\n      return {\r\n        ...state,\r\n        fetchByFiltersRequest: action.payload.fetchByFiltersRequest\r\n      };\r\n    }\r\n    case DIFF_REPORT_FETCHED: {\r\n      return {\r\n        ...state,\r\n        diffReportResponse: action.payload.diffReportResponse\r\n      };\r\n    }\r\n    case AGGREGATE_REPORT_FETCHED: {\r\n      return {\r\n        ...state,\r\n        aggregateReportResponse: action.payload.aggregateReportResponse\r\n      };\r\n    }\r\n    case PAYMENTS_STATE_RESET: {\r\n      return { ...initialState };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { createLogger } from \"redux-logger\";\r\n\r\nexport const logger =  createLogger({\r\n    level:'info',\r\n    duration:true,\r\n    diff:true\r\n});","import { createRootReducer } from \"./rootReducer\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { logger } from \"./logger\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nfunction configureStore(preloadedState) {\r\n  const middlewares = [thunkMiddleware, routerMiddleware(history), logger];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const enhancers = [middlewareEnhancer];\r\n  const composedEnhancers = compose(...enhancers);\r\n\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    preloadedState,\r\n    composedEnhancers\r\n  );\r\n\r\n  return store;\r\n}\r\n\r\nexport default configureStore();\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\nimport { menuReducer } from \"./menu/reducer\";\r\nimport { settingsReducer } from \"./settings/reducer\";\r\nimport { feedbackManagerReducer } from \"./feedback-manager/reducer\";\r\nimport { loaderReducer } from \"./loader/reducer\";\r\nimport { usersReducer } from \"./users/reducer\";\r\nimport { spendingCategoriesReducer } from \"./spending-categories/reducer\";\r\nimport { homeReducer } from \"./home/reducer\";\r\nimport { paymentsReducer } from \"./payments/reducer\";\r\n\r\nexport const createRootReducer = history => combineReducers({\r\n  feedbackManagerReducer,\r\n  homeReducer,\r\n  loaderReducer,\r\n  menuReducer,\r\n  paymentsReducer,\r\n  settingsReducer,\r\n  spendingCategoriesReducer,\r\n  usersReducer,\r\n  router:connectRouter(history)\r\n})","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { HomeContainer } from \"../routes/home/HomeContainer\";\r\nimport { AddUserPageContainer, CreateGroupPageContainer, ManageUsersPageContainer } from \"../routes/users\";\r\nimport { AddPaymentPageContainer, ReportsPageContainer } from \"../routes/payments\";\r\nimport { SettingsPageContainer } from \"../routes/settings/SettingsPageContainer\";\r\nimport { SpendingCategoriesContainer } from \"../routes/spending-categories/SpendingCategoriesContainer\";\r\nimport {\r\n  ADD_USER_ROUTE,\r\n  CREATE_GROUP_ROUTE,\r\n  MANAGE_USER_ROUTE,\r\n  ADD_PAYMENT_ROUTE,\r\n  REPORTS_ROUTE,\r\n  SETTINGS_ROUTE,\r\n  HOME_ROUTE,\r\n  SPENDING_CATEGORIES_ROUTE\r\n} from \"../common/constants\";\r\nimport { history } from \"../../redux/store\";\r\n\r\nexport const AppRouter = props => {\r\n  return (\r\n    <>\r\n      <ConnectedRouter history={history}>\r\n        <Switch>\r\n          <Route path={ADD_USER_ROUTE}>\r\n            <AddUserPageContainer />\r\n          </Route>\r\n          <Route path={CREATE_GROUP_ROUTE}>\r\n            <CreateGroupPageContainer />\r\n          </Route>\r\n          <Route path={MANAGE_USER_ROUTE}>\r\n            <ManageUsersPageContainer />\r\n          </Route>\r\n          <Route path={ADD_PAYMENT_ROUTE}>\r\n            <AddPaymentPageContainer />\r\n          </Route>\r\n          <Route path={REPORTS_ROUTE}>\r\n            <ReportsPageContainer />\r\n          </Route>\r\n          <Route path={SETTINGS_ROUTE}>\r\n            <SettingsPageContainer />\r\n          </Route>\r\n          <Route path={SPENDING_CATEGORIES_ROUTE}>\r\n            <SpendingCategoriesContainer />\r\n          </Route>\r\n          <Route path={HOME_ROUTE}>\r\n            <HomeContainer />\r\n          </Route>\r\n        </Switch>\r\n      </ConnectedRouter>\r\n    </>\r\n  );\r\n};\r\n","import { IconWithTooltip } from \"./icon-with-tooltip/IconWithTooltip\";\r\n\r\nexport const SidebarIcon = ({ tooltipMessageI18nKey, iconName }) => (\r\n  <IconWithTooltip\r\n    tooltipMessageI18nKey={tooltipMessageI18nKey}\r\n    fontAwesomeIconProps={{ icon: iconName, color: \"white\", size: \"3x\" }}\r\n  />\r\n);\r\n","import { useEffect } from \"react\";\r\nimport \"./Sidebar.scss\";\r\nimport {\r\n  faHome,\r\n  faCog,\r\n  faFunnelDollar,\r\n  faUser,\r\n  faEuroSign\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { SidebarIcon } from \"../../common/components/SidebarIcon\";\r\nimport {\r\n  SETTINGS_ROUTE,\r\n  HOME_ROUTE,\r\n  HOME_KEY,\r\n  PAYMENTS_KEY,\r\n  USERS_KEY,\r\n  SETTINGS_KEY,\r\n  ADD_USER_ROUTE,\r\n  CREATE_GROUP_ROUTE,\r\n  MANAGE_USER_ROUTE,\r\n  ADD_PAYMENT_ROUTE,\r\n  REPORTS_ROUTE,\r\n  ADD_PAYMENT_KEY,\r\n  REPORTS_KEY,\r\n  ADD_USER_KEY,\r\n  CREATE_GROUP_KEY,\r\n  MANAGE_USER_KEY,\r\n  SPENDING_CATEGORIES_KEY,\r\n  SPENDING_CATEGORIES_ROUTE\r\n} from \"../../common/constants\";\r\n\r\nconst iconSettings = [\r\n  {\r\n    key: HOME_KEY,\r\n    iconName: faHome,\r\n    tooltipMessageI18nKey: \"MENU.HOME\",\r\n    openSecondLevel: false,\r\n    route: HOME_ROUTE\r\n  },\r\n  {\r\n    key: PAYMENTS_KEY,\r\n    iconName: faEuroSign,\r\n    tooltipMessageI18nKey: \"MENU.PAYMENTS\",\r\n    openSecondLevel: true,\r\n    children: [\r\n      {\r\n        key: ADD_PAYMENT_KEY,\r\n        route: ADD_PAYMENT_ROUTE,\r\n        label: \"Aggiungi pagamento\"\r\n      },\r\n      {\r\n        key: REPORTS_KEY,\r\n        route: REPORTS_ROUTE,\r\n        label: \"Reports\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: USERS_KEY,\r\n    iconName: faUser,\r\n    tooltipMessageI18nKey: \"MENU.USERS\",\r\n    openSecondLevel: true,\r\n    children: [\r\n      {\r\n        key: ADD_USER_KEY,\r\n        route: ADD_USER_ROUTE,\r\n        label: \"Aggiungi utente\"\r\n      },\r\n      {\r\n        key: CREATE_GROUP_KEY,\r\n        route: CREATE_GROUP_ROUTE,\r\n        label: \"Crea gruppo\"\r\n      },\r\n      {\r\n        key: MANAGE_USER_KEY,\r\n        route: MANAGE_USER_ROUTE,\r\n        label: \"Gestisci associazioni\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: SPENDING_CATEGORIES_KEY,\r\n    iconName: faFunnelDollar,\r\n    tooltipMessageI18nKey: \"MENU.SPENDING_CATEGORIES\",\r\n    openSecondLevel: false,\r\n    route: SPENDING_CATEGORIES_ROUTE\r\n  },\r\n  {\r\n    key: SETTINGS_KEY,\r\n    iconName: faCog,\r\n    tooltipMessageI18nKey: \"MENU.SETTINGS\",\r\n    openSecondLevel: false,\r\n    route: SETTINGS_ROUTE\r\n  }\r\n];\r\n\r\nconst SidebarIconWrapper = ({\r\n  iconSetting,\r\n  activeIcon,\r\n  clickedIcon,\r\n  openSidebarWithChildren,\r\n  navigateAndCloseSidebar,\r\n  closeSidebarAndResetIconClicked\r\n}) => {\r\n  const { openSecondLevel, route, key } = iconSetting;\r\n\r\n  const selectedClassName =\r\n    activeIcon && activeIcon.key === key ? \" selected\" : \"\";\r\n  const clickedClassName =\r\n    clickedIcon && clickedIcon.key === key ? \" clicked\" : \"\";\r\n\r\n  function onClick(event) {\r\n    if (openSecondLevel) {\r\n      if (clickedIcon && clickedIcon.key === key) {\r\n        closeSidebarAndResetIconClicked();\r\n      } else {\r\n        openSidebarWithChildren(iconSetting);\r\n      }\r\n    }\r\n    if (route) {\r\n      navigateAndCloseSidebar(route);\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className={`sidebar-icon-wrapper${selectedClassName}${clickedClassName}`}\r\n      onClick={onClick}\r\n    >\r\n      <SidebarIcon\r\n        tooltipMessageI18nKey={iconSetting.tooltipMessageI18nKey}\r\n        iconName={iconSetting.iconName}\r\n      />\r\n      <div className=\"divider\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Sidebar = ({\r\n  activeIcon,\r\n  initMenu,\r\n  clickedIcon,\r\n  openSidebarWithChildren,\r\n  navigateAndCloseSidebar,\r\n  closeSidebarAndResetIconClicked\r\n}) => {\r\n  useEffect(() => {\r\n    initMenu(iconSettings);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {iconSettings.map((el, index) => (\r\n        <SidebarIconWrapper\r\n          key={`sidebarIcon${index}`}\r\n          iconSetting={el}\r\n          activeIcon={activeIcon}\r\n          clickedIcon={clickedIcon}\r\n          openSidebarWithChildren={openSidebarWithChildren}\r\n          navigateAndCloseSidebar={navigateAndCloseSidebar}\r\n          closeSidebarAndResetIconClicked={closeSidebarAndResetIconClicked}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { Sidebar } from \"./Sidebar\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  initMenu,\r\n  openSidebarWithChildren,\r\n  navigateAndCloseSidebar,\r\n  closeSidebarAndResetIconClicked\r\n} from \"../../../redux/menu/actions\";\r\n\r\nimport {\r\n  getClickedIcon,\r\n  getActiveIcon,\r\n} from \"../../../redux/menu/selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n  clickedIcon: getClickedIcon(state),\r\n  activeIcon: getActiveIcon(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  initMenu,\r\n  navigateAndCloseSidebar,\r\n  openSidebarWithChildren,\r\n  closeSidebarAndResetIconClicked\r\n};\r\n\r\nexport const SidebarContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Sidebar);\r\n","import \"./SecondLevelSibarContent.scss\";\r\n\r\nconst Element = ({ label, onClick }) => (\r\n  <>\r\n    <p className=\"paragraph\" onClick={onClick}>\r\n      {label}\r\n    </p>\r\n  </>\r\n);\r\n\r\nexport const SecondLevelSidebarContent = ({\r\n  clickedIcon,\r\n  navigateAndCloseSidebar\r\n}) => {\r\n  if (!clickedIcon) {\r\n    return <></>;\r\n  }\r\n\r\n  const { children } = clickedIcon;\r\n  return (\r\n    <div className=\"second-level-sidebar-content\">\r\n      {children ? (\r\n        children.map(el => (\r\n          <Element\r\n            key={el.key}\r\n            label={el.label}\r\n            onClick={event => navigateAndCloseSidebar(el.route)}\r\n          />\r\n        ))\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { SecondLevelSidebar } from \"./SecondLevelSidebar\";\r\n\r\nimport {\r\n  openSecondLevelSidebar,\r\n  closeSecondLevelSidebar,\r\n  toggleSecondLevelSidebar,\r\n  navigateAndCloseSidebar\r\n} from \"../../../redux/menu/actions\";\r\n\r\nimport { getSecondLevelSidebarOpen, getClickedIcon } from \"../../../redux/menu/selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n    secondLevelSidebarOpen:getSecondLevelSidebarOpen(state),\r\n    clickedIcon:getClickedIcon(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  openSecondLevelSidebar,\r\n  closeSecondLevelSidebar,\r\n  toggleSecondLevelSidebar,\r\n  navigateAndCloseSidebar\r\n};\r\n\r\nexport const SecondLevelSidebarContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SecondLevelSidebar);\r\n","import \"./SecondLevelSidebar.scss\";\r\nimport { SecondLevelSidebarContent } from \"./second-level-sidebar-content/SecondLevelSidebarContent\";\r\n\r\nexport const SecondLevelSidebar = props => {\r\n  const {\r\n    secondLevelSidebarOpen,\r\n    clickedIcon,\r\n    navigateAndCloseSidebar\r\n  } = props;\r\n  return (\r\n    <div\r\n      className={`second-level-sidebar ${\r\n        secondLevelSidebarOpen ? \"open\" : \"closed\"\r\n      }`}\r\n    >\r\n      <SecondLevelSidebarContent\r\n        clickedIcon={clickedIcon}\r\n        navigateAndCloseSidebar={navigateAndCloseSidebar}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import \"./Content.scss\";\r\n\r\nexport const Content = ({children, onClick}) => {\r\n  return <div onClick={onClick} className=\"content\">{children}</div>;\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport {\r\n  ALERT_TYPE_ERROR,\r\n  ALERT_TYPE_SUCCESS,\r\n  ALERT_TYPE_INFO\r\n} from \"../../../../redux/common/constants\";\r\n\r\nimport \"./Alert.scss\";\r\n\r\nimport {\r\n  faCheck,\r\n  faInfoCircle,\r\n  faExclamationTriangle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst mapTypeToLabelKey = {\r\n  [ALERT_TYPE_ERROR]: \"ALERT.ERROR\",\r\n  [ALERT_TYPE_SUCCESS]: \"ALERT.SUCCESS\",\r\n  [ALERT_TYPE_INFO]: \"ALERT.INFO\"\r\n};\r\n\r\nconst mapTypeToIcon = {\r\n  [ALERT_TYPE_ERROR]: faExclamationTriangle,\r\n  [ALERT_TYPE_SUCCESS]: faCheck,\r\n  [ALERT_TYPE_INFO]: faInfoCircle\r\n};\r\n\r\nconst addShowClass = show => (show ? \" open\" : \"\");\r\n\r\nconst AlertBox = ({ show, hideCallback, showTime, type, t }) => {\r\n  useEffect(() => {\r\n    show && hideCallback && setTimeout(hideCallback, showTime);\r\n  }, [show]);\r\n  return (\r\n    <div className={`alert-box ${type}${addShowClass(show)}`}>\r\n      <span className=\"txt\">{t(mapTypeToLabelKey[type])}</span>\r\n      <FontAwesomeIcon icon={mapTypeToIcon[type]} color=\"white\" size=\"2x\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nAlertBox.defaultProps = {\r\n  show: false,\r\n  showTime: 2500,\r\n  type: \"error\"\r\n};\r\n\r\nexport const Alert = withNamespaces()(AlertBox);\r\n","import { GenericModal } from \"../generic-modal/GenericModal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheck,\r\n  faExclamationTriangle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./FeedbackModal.scss\";\r\n\r\nexport const FeedbackModal = ({\r\n  isSuccess,\r\n  title,\r\n  subtitle,\r\n  isOpen,\r\n  onClose\r\n}) => {\r\n  let icon = faCheck;\r\n  let iconColor = \"green\";\r\n  if (!isSuccess) {\r\n    icon = faExclamationTriangle;\r\n    iconColor = \"red\";\r\n  }\r\n  return (\r\n    <GenericModal externalOpen isOpen={isOpen} onClose={onClose}>\r\n      <div className=\"body-wrapper\">\r\n        <h1>{title}</h1>\r\n        <p>{subtitle}</p>\r\n        <div>\r\n          <FontAwesomeIcon icon={icon} color={iconColor} size={\"10x\"} />\r\n        </div>\r\n      </div>\r\n    </GenericModal>\r\n  );\r\n};\r\n","import { Alert } from \"../../common/components/alert/Alert\";\r\nimport { FeedbackModal } from \"../../common/components/feedback-modal/FeedbackModal\";\r\nimport { withNamespaces } from \"react-i18next\";\r\n\r\nexport const FeedbackManager = withNamespaces()(\r\n  ({\r\n    showAlert,\r\n    hideAlertCallback,\r\n    alertType,\r\n    showTime,\r\n    isFeedbackModalSuccess,\r\n    feedbackModalTitleKey,\r\n    feedbackModalSubtitleKey,\r\n    isFeedbackModalOpen,\r\n    onCloseFeedbackModal,\r\n    t\r\n  }) => {\r\n    return (\r\n      <>\r\n        <Alert\r\n          show={showAlert}\r\n          hideCallback={hideAlertCallback}\r\n          type={alertType}\r\n          showTime={showTime}\r\n        />\r\n        <FeedbackModal\r\n          isSuccess={isFeedbackModalSuccess}\r\n          title={t(feedbackModalTitleKey)}\r\n          subtitle={t(feedbackModalSubtitleKey)}\r\n          isOpen={isFeedbackModalOpen}\r\n          onClose={onCloseFeedbackModal}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const feedbackManagerSlice = state => state.feedbackManagerReducer;\r\n\r\nexport const getShowAlert = createSelector(\r\n  feedbackManagerSlice,\r\n  state => state.showAlert\r\n);\r\n\r\nexport const getAlertType = createSelector(\r\n  feedbackManagerSlice,\r\n  state => state.alertType\r\n);\r\n\r\nexport const getShowTime = createSelector(\r\n  feedbackManagerSlice,\r\n  state => state.showTime\r\n);\r\n\r\nexport const getIsFeedbackModalOpen = createSelector(\r\n  feedbackManagerSlice,\r\n  state => state.isFeedbackModalOpen\r\n);\r\n\r\nexport const getIsFeedbackModalSuccess = createSelector(\r\n  feedbackManagerSlice,\r\n  state => state.isFeedbackModalSuccess\r\n);\r\n\r\nexport const getFeedbackModalTitleKey = createSelector(\r\n  feedbackManagerSlice,\r\n  state => state.feedbackModalTitleKey\r\n);\r\n\r\nexport const getFeedbackModalSubtitleKey = createSelector(\r\n  feedbackManagerSlice,\r\n  state => state.feedbackModalSubtitleKey\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport { FeedbackManager } from \"./FeedbackManager\";\r\nimport {\r\n  getShowAlert,\r\n  getAlertType,\r\n  getShowTime,\r\n  getIsFeedbackModalOpen,\r\n  getIsFeedbackModalSuccess,\r\n  getFeedbackModalTitleKey,\r\n  getFeedbackModalSubtitleKey\r\n} from \"../../../redux/feedback-manager/selectors\";\r\n\r\nimport { hideAlert } from \"../../../redux/feedback-manager/actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  showAlert: getShowAlert(state),\r\n  alertType: getAlertType(state),\r\n  showTime: getShowTime(state),\r\n  isFeedbackModalOpen: getIsFeedbackModalOpen(state),\r\n  isFeedbackModalSuccess: getIsFeedbackModalSuccess(state),\r\n  feedbackModalTitleKey: getFeedbackModalTitleKey(state),\r\n  feedbackModalSubtitleKey: getFeedbackModalSubtitleKey(state)\r\n});\r\n\r\nconst mapDispatchToProps = { hideAlertCallback:hideAlert };\r\n\r\nexport const FeedbackManagerContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FeedbackManager);\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport \"./GlobalLoader.scss\";\r\n\r\nexport const GlobalLoader = ({ loading }) => {\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <div className=\"overlay\"></div>\r\n        <div className=\"loader-container\">\r\n          <CircularProgress />\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n","import { Layout } from \"./Layout\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport { closeSidebarAndResetIconClicked } from \"../../redux/menu/actions\";\r\nimport { isLoadingByKey } from \"../../redux/loader/selectors\";\r\nimport { LOADER_KEYS } from \"../../redux/loader/loaderKeys\";\r\n\r\nconst mapStateToProps = state => ({\r\n    globalLoaderLoading:isLoadingByKey(LOADER_KEYS.GLOBAL)(state)\r\n});\r\n\r\nconst mapDispatchToProps = { closeSidebarAndResetIconClicked, push };\r\n\r\nexport const LayoutContainer = connect(mapStateToProps, mapDispatchToProps)(Layout);","import { useEffect } from \"react\";\r\nimport { SidebarContainer } from \"./sidebar/SidebarContainer\";\r\nimport { SecondLevelSidebarContainer } from \"./second-level-sidebar/SecondLevelSidebarContainer\";\r\nimport { Content } from \"./content/Content\";\r\nimport { FeedbackManagerContainer } from \"./feedback-manager/FeedbackManagerContainer\";\r\nimport \"./Layout.scss\";\r\nimport { GlobalLoader } from \"./global-loader/GlobalLoader\";\r\n\r\nexport const Layout = ({children, closeSidebarAndResetIconClicked, globalLoaderLoading, push}) => {\r\n   useEffect(() => {\r\n     const navigationEntry = window.performance.getEntriesByType(\"navigation\");\r\n    if(navigationEntry && navigationEntry[0].type === \"reload\"){\r\n      const route = window.location.pathname;\r\n      setTimeout(() => push(route), 0);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <SidebarContainer />\r\n      <SecondLevelSidebarContainer />\r\n      <Content onClick={closeSidebarAndResetIconClicked}>{children}</Content>\r\n      <FeedbackManagerContainer />\r\n      <GlobalLoader loading={globalLoaderLoading} />\r\n    </div>\r\n  );\r\n};\r\n","import { AppRouter } from \"./ui/app-router/AppRouter\";\r\nimport { LayoutContainer } from \"./ui/layout/LayoutContainer\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <LayoutContainer>\r\n        <AppRouter />\r\n      </LayoutContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import i18n from \"i18next\";\r\nimport { reactI18nextModule } from \"react-i18next\";\r\n\r\nimport translationIT from './locales/it-IT.json';\r\n\r\n// the translations\r\nconst resources = {\r\n  it: {\r\n    translation: translationIT\r\n  }\r\n};\r\n\r\ni18n\r\n  .use(reactI18nextModule) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"it\",\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\nexport default i18n;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport  \"./ui/i18n/i18n\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}